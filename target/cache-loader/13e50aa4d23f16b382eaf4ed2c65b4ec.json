{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\billing\\billing-modal.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\billing\\billing-modal.tsx","mtime":1562234278398},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap';\r\nexport class BillingModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Modal, { isOpen: this.props.searchResult && this.props.searchResult.length > 0, className: \"text-center\" },\r\n                React.createElement(ModalHeader, { className: \"text-center\" }, \"Votre entreprise est-elle pr\\u00E9sente ?\"),\r\n                React.createElement(ModalBody, { className: \"text-center\" },\r\n                    React.createElement(ButtonGroup, { vertical: true }, this.props.searchResult.map((item, i) => (React.createElement(Button, { key: `item-${i}`, color: \"primary\", onClick: () => this.props.chooseResult(item) },\r\n                        item.denomination,\r\n                        \" - \",\r\n                        item.ville))))),\r\n                React.createElement(ModalFooter, null,\r\n                    React.createElement(Button, { color: \"danger\", onClick: () => this.props.toggle() }, \"Cancel\")))));\r\n    }\r\n}\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\billing\\billing-modal.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\billing\\billing-modal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AAS7F,MAAM,OAAO,YAAa,SAAQ,KAAK,CAAC,SAA4B;IAClE,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAED,iBAAiB;IACjB,CAAC;IAED,MAAM;QACJ,OAAO,CACL;YACE,oBAAC,KAAK,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,EACnE,SAAS,EAAC,aAAa;gBAC5B,oBAAC,WAAW,IAAC,SAAS,EAAC,aAAa,gDAEtB;gBACd,oBAAC,SAAS,IAAC,SAAS,EAAC,aAAa;oBAClC,oBAAC,WAAW,IAAC,QAAQ,UAChB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CACxC,oBAAC,MAAM,IAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAC,SAAS,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC;wBACnF,IAAI,CAAC,YAAY;;wBAAK,IAAI,CAAC,KAAK,CAC1B,CACV,CAAC,CACU,CACJ;gBACZ,oBAAC,WAAW;oBACV,oBAAC,MAAM,IAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,aAAiB,CAC9D,CACR,CACJ,CACP,CAAC;IACJ,CAAC;CACF","sourcesContent":["import React from 'react';\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap';\r\nimport {  ISearchResult } from 'app/shared/model/facture.model';\r\n\r\nexport interface IBillingModalProp {\r\n    searchResult : ReadonlyArray<ISearchResult>;\r\n    toggle;\r\n    chooseResult;\r\n}\r\n\r\nexport class BillingModal extends React.Component<IBillingModalProp> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal isOpen={this.props.searchResult && this.props.searchResult.length>0} \r\n               className=\"text-center\">\r\n          <ModalHeader className=\"text-center\">\r\n            Votre entreprise est-elle pr√©sente ?\r\n          </ModalHeader>\r\n          <ModalBody className=\"text-center\">\r\n          <ButtonGroup vertical>\r\n              {this.props.searchResult.map((item, i) => (\r\n                <Button key={`item-${i}`} color=\"primary\" onClick={() => this.props.chooseResult(item)}>\r\n                  {item.denomination} - {item.ville}\r\n                </Button>\r\n              ))}\r\n            </ButtonGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"danger\" onClick={() => this.props.toggle()}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}]}