{"remainingRequest":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-delete-dialog.tsx","dependencies":[{"path":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-delete-dialog.tsx","mtime":1560254031119},{"path":"c:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getUser, deleteUser } from './user-management.reducer';\r\nexport class UserManagementDeleteDialog extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.confirmDelete = event => {\r\n            this.props.deleteUser(this.props.user.login);\r\n            this.handleClose(event);\r\n        };\r\n        this.handleClose = event => {\r\n            event.stopPropagation();\r\n            this.props.history.goBack();\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.props.getUser(this.props.match.params.login);\r\n    }\r\n    render() {\r\n        const { user } = this.props;\r\n        return (React.createElement(Modal, { isOpen: true, toggle: this.handleClose },\r\n            React.createElement(ModalHeader, { toggle: this.handleClose },\r\n                React.createElement(Translate, { contentKey: \"entity.delete.title\" }, \"Confirm delete operation\")),\r\n            React.createElement(ModalBody, null,\r\n                React.createElement(Translate, { contentKey: \"userManagement.delete.question\", interpolate: { login: user.login } }, \"Are you sure you want to delete this User?\")),\r\n            React.createElement(ModalFooter, null,\r\n                React.createElement(Button, { color: \"secondary\", onClick: this.handleClose },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"ban\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Translate, { contentKey: \"entity.action.cancel\" }, \"Cancel\")),\r\n                React.createElement(Button, { color: \"danger\", onClick: this.confirmDelete },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\")))));\r\n    }\r\n}\r\nconst mapStateToProps = (storeState) => ({\r\n    user: storeState.userManagement.user\r\n});\r\nconst mapDispatchToProps = { getUser, deleteUser };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementDeleteDialog);\r\n",{"version":3,"file":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-delete-dialog.tsx","sourceRoot":"","sources":["c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-delete-dialog.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAChF,OAAO,EAAE,SAAS,EAAqC,MAAM,gBAAgB,CAAC;AAC9E,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAGjE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AAKhE,MAAM,OAAO,0BAA2B,SAAQ,KAAK,CAAC,SAA2C;IAAjG;;QAKE,kBAAa,GAAG,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,gBAAW,GAAG,KAAK,CAAC,EAAE;YACpB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9B,CAAC,CAAC;IA6BJ,CAAC;IAzCC,iBAAiB;QACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAYD,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5B,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,QAAC,MAAM,EAAE,IAAI,CAAC,WAAW;YACpC,oBAAC,WAAW,IAAC,MAAM,EAAE,IAAI,CAAC,WAAW;gBACnC,oBAAC,SAAS,IAAC,UAAU,EAAC,qBAAqB,+BAAqC,CACpE;YACd,oBAAC,SAAS;gBACR,oBAAC,SAAS,IAAC,UAAU,EAAC,gCAAgC,EAAC,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,iDAE7E,CACF;YACZ,oBAAC,WAAW;gBACV,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW;oBACjD,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;;oBAE9B,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD;gBACT,oBAAC,MAAM,IAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa;oBAChD,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;;oBAEhC,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD,CACG,CACR,CACT,CAAC;IACJ,CAAC;CACF;AAED,MAAM,eAAe,GAAG,CAAC,UAAsB,EAAE,EAAE,CAAC,CAAC;IACnD,IAAI,EAAE,UAAU,CAAC,cAAc,CAAC,IAAI;CACrC,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;AAKnD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,0BAA0B,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IUser } from 'app/shared/model/user.model';\nimport { getUser, deleteUser } from './user-management.reducer';\nimport { IRootState } from 'app/shared/reducers';\n\nexport interface IUserManagementDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ login: string }> {}\n\nexport class UserManagementDeleteDialog extends React.Component<IUserManagementDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteUser(this.props.user.login);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody>\n          <Translate contentKey=\"userManagement.delete.question\" interpolate={{ login: user.login }}>\n            Are you sure you want to delete this User?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  user: storeState.userManagement.user\n});\n\nconst mapDispatchToProps = { getUser, deleteUser };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserManagementDeleteDialog);\n"]}]}