{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture.reducer.ts","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture.reducer.ts","mtime":1563889455190},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { defaultValue } from 'app/shared/model/facture.model';\r\nexport const ACTION_TYPES = {\r\n    FETCH_FACTURE_LIST: 'facture/FETCH_FACTURE_LIST',\r\n    FETCH_FACTURE: 'facture/FETCH_FACTURE',\r\n    FETCH_FACTURE_PDF: 'facture/FETCH_FACTURE_PDF',\r\n    FETCH_FACTURE_SEARCH: 'facture/FETCH_FACTURE_SEARCH',\r\n    RESET_FACTURE_SEARCH: 'facture/RESET_FACTURE_SEARCH',\r\n    CREATE_FACTURE: 'facture/CREATE_FACTURE',\r\n    UPDATE_FACTURE: 'facture/UPDATE_FACTURE',\r\n    DELETE_FACTURE: 'facture/DELETE_FACTURE',\r\n    RESET: 'facture/RESET'\r\n};\r\nconst initialState = {\r\n    loading: false,\r\n    errorMessage: null,\r\n    entities: [],\r\n    searchResult: [],\r\n    entity: defaultValue,\r\n    updating: false,\r\n    updateSuccess: false,\r\n    pdfBase64: '',\r\n    pdf: Blob\r\n};\r\n// Reducer\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.FETCH_FACTURE_LIST):\r\n        case REQUEST(ACTION_TYPES.FETCH_FACTURE):\r\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, loading: true });\r\n        case REQUEST(ACTION_TYPES.CREATE_FACTURE):\r\n        case REQUEST(ACTION_TYPES.UPDATE_FACTURE):\r\n        case REQUEST(ACTION_TYPES.DELETE_FACTURE):\r\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, updating: true });\r\n        case FAILURE(ACTION_TYPES.FETCH_FACTURE_LIST):\r\n        case FAILURE(ACTION_TYPES.FETCH_FACTURE):\r\n        case FAILURE(ACTION_TYPES.CREATE_FACTURE):\r\n        case FAILURE(ACTION_TYPES.UPDATE_FACTURE):\r\n        case FAILURE(ACTION_TYPES.DELETE_FACTURE):\r\n            return Object.assign({}, state, { loading: false, updating: false, updateSuccess: false, errorMessage: action.payload });\r\n        case SUCCESS(ACTION_TYPES.FETCH_FACTURE_LIST):\r\n            return Object.assign({}, state, { loading: false, entities: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.FETCH_FACTURE):\r\n            return Object.assign({}, state, { loading: false, entity: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.FETCH_FACTURE_SEARCH):\r\n            return Object.assign({}, state, { loading: false, searchResult: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.FETCH_FACTURE_PDF):\r\n            return Object.assign({}, state, { loading: false });\r\n        case SUCCESS(ACTION_TYPES.CREATE_FACTURE):\r\n        case SUCCESS(ACTION_TYPES.UPDATE_FACTURE):\r\n            return Object.assign({}, state, { updating: false, updateSuccess: true, pdfBase64: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.DELETE_FACTURE):\r\n            return Object.assign({}, state, { updating: false, updateSuccess: true, entity: {} });\r\n        case ACTION_TYPES.RESET:\r\n            return Object.assign({}, initialState);\r\n        case ACTION_TYPES.RESET_FACTURE_SEARCH:\r\n            return Object.assign({}, state, { searchResult: [] });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst apiUrl = 'api/factures';\r\n// Actions\r\nexport const getEntitiesFacture = (page, size, sort) => {\r\n    const requestUrl = `api/myaccount/facture`;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_FACTURE_LIST,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\nexport const getEntity = id => {\r\n    const requestUrl = `${apiUrl}/${id}`;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_FACTURE,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\nexport const getSearch = raisonSociale => {\r\n    const requestUrl = `${apiUrl}/etablissement/search`;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_FACTURE_SEARCH,\r\n        payload: axios.get(requestUrl, { params: raisonSociale })\r\n    };\r\n};\r\nexport const getFacturePdf = folder_root_name => {\r\n    const requestUrl = `api/myaccount/facturePdf`;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_FACTURE_PDF,\r\n        payload: axios({\r\n            url: requestUrl,\r\n            params: { folder_root_name: folder_root_name },\r\n            method: 'GET',\r\n            responseType: 'blob',\r\n        }).then((response) => {\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'facture.pdf'); //or any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        })\r\n    };\r\n};\r\nexport const createEntity = entity => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.CREATE_FACTURE,\r\n        payload: axios.post(`api/billing/${entity.hash}`, cleanEntity(entity))\r\n    });\r\n    dispatch(getEntitiesFacture());\r\n    return result;\r\n});\r\nexport const updateEntity = entity => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.UPDATE_FACTURE,\r\n        payload: axios.put(apiUrl, cleanEntity(entity))\r\n    });\r\n    dispatch(getEntitiesFacture());\r\n    return result;\r\n});\r\nexport const deleteEntity = id => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const requestUrl = `${apiUrl}/${id}`;\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.DELETE_FACTURE,\r\n        payload: axios.delete(requestUrl)\r\n    });\r\n    dispatch(getEntitiesFacture());\r\n    return result;\r\n});\r\nexport const reset = () => ({\r\n    type: ACTION_TYPES.RESET\r\n});\r\nexport const resetFactureSearch = () => ({\r\n    type: ACTION_TYPES.RESET_FACTURE_SEARCH\r\n});\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture.reducer.ts","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture.reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IFacture, ISearchResult, defaultValue } from 'app/shared/model/facture.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_FACTURE_LIST: 'facture/FETCH_FACTURE_LIST',\r\n  FETCH_FACTURE: 'facture/FETCH_FACTURE',\r\n  FETCH_FACTURE_PDF: 'facture/FETCH_FACTURE_PDF',\r\n  FETCH_FACTURE_SEARCH: 'facture/FETCH_FACTURE_SEARCH',\r\n  RESET_FACTURE_SEARCH: 'facture/RESET_FACTURE_SEARCH',\r\n  CREATE_FACTURE: 'facture/CREATE_FACTURE',\r\n  UPDATE_FACTURE: 'facture/UPDATE_FACTURE',\r\n  DELETE_FACTURE: 'facture/DELETE_FACTURE',\r\n  RESET: 'facture/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IFacture>,\r\n  searchResult: [] as ReadonlyArray<ISearchResult>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false,\r\n  pdfBase64 : '',\r\n  pdf: Blob\r\n};\r\n\r\nexport type FactureState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: FactureState = initialState, action): FactureState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_FACTURE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_FACTURE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_FACTURE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_FACTURE):\r\n    case REQUEST(ACTION_TYPES.DELETE_FACTURE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_FACTURE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_FACTURE):\r\n    case FAILURE(ACTION_TYPES.CREATE_FACTURE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_FACTURE):\r\n    case FAILURE(ACTION_TYPES.DELETE_FACTURE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FACTURE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FACTURE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FACTURE_SEARCH):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        searchResult: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FACTURE_PDF):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_FACTURE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_FACTURE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        pdfBase64: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_FACTURE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n      case ACTION_TYPES.RESET_FACTURE_SEARCH:\r\n        return {\r\n          ...state,\r\n          searchResult: []\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/factures';\r\n\r\n// Actions\r\n\r\nexport const getEntitiesFacture: ICrudGetAllAction<IFacture> = (page, size, sort) => {\r\n  const requestUrl = `api/myaccount/facture`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_FACTURE_LIST,\r\n    payload: axios.get<IFacture>(requestUrl)\r\n  };\r\n};\r\n\r\n\r\nexport const getEntity: ICrudGetAction<IFacture> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_FACTURE,\r\n    payload: axios.get<IFacture>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const getSearch: ICrudGetAction<IFacture> = raisonSociale => {\r\n  const requestUrl = `${apiUrl}/etablissement/search`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_FACTURE_SEARCH,\r\n    payload: axios.get<IFacture>(requestUrl, {params : raisonSociale})\r\n  };\r\n};\r\n\r\nexport const getFacturePdf = folder_root_name => {\r\n  const requestUrl = `api/myaccount/facturePdf`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_FACTURE_PDF,\r\n    payload: axios({\r\n      url: requestUrl, //your url\r\n      params: { folder_root_name : folder_root_name},\r\n      method: 'GET',\r\n      responseType: 'blob', // important\r\n    }).then((response) => {\r\n       const url = window.URL.createObjectURL(new Blob([response.data]));\r\n       const link = document.createElement('a');\r\n       link.href = url;\r\n       link.setAttribute('download', 'facture.pdf'); //or any other extension\r\n       document.body.appendChild(link);\r\n       link.click();\r\n    })\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IFacture> = entity => async dispatch => {  \r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_FACTURE,\r\n    payload: axios.post(`api/billing/${entity.hash}`, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntitiesFacture());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IFacture> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_FACTURE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntitiesFacture());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IFacture> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_FACTURE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntitiesFacture());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n\r\nexport const resetFactureSearch = () => ({\r\n  type: ACTION_TYPES.RESET_FACTURE_SEARCH\r\n});"]}]}