{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture.tsx","mtime":1563261494652},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities } from './facture.reducer';\r\nexport class Facture extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEntities();\r\n    }\r\n    render() {\r\n        const { factureList, match } = this.props;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { id: \"facture-heading\" },\r\n                React.createElement(Translate, { contentKey: \"cleanclientApp.facture.home.title\" }, \"Factures\"),\r\n                React.createElement(Link, { to: `${match.url}/new`, className: \"btn btn-primary float-right jh-create-entity\", id: \"jh-create-entity\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"plus\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Translate, { contentKey: \"cleanclientApp.facture.home.createLabel\" }, \"Create new Facture\"))),\r\n            React.createElement(\"div\", { className: \"table-responsive\" }, factureList && factureList.length > 0 ? (React.createElement(Table, { responsive: true },\r\n                React.createElement(\"thead\", null,\r\n                    React.createElement(\"tr\", null,\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.particulier\" }, \"Particulier\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.raisonSociale\" }, \"Raison Sociale\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.siret\" }, \"Siret\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.nom\" }, \"Nom\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.prenom\" }, \"Prenom\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.telephone\" }, \"Telephone\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.noVoie\" }, \"No Voie\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.rue\" }, \"Rue\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.cp\" }, \"Cp\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.ville\" }, \"Ville\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.mail\" }, \"Mail\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.paye\" }, \"Paye\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.tva\" }, \"Tva\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.montant\" }, \"Montant\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.importFichier\" }, \"Import Fichier\")),\r\n                        React.createElement(\"th\", null))),\r\n                React.createElement(\"tbody\", null, factureList.map((facture, i) => (React.createElement(\"tr\", { key: `entity-${i}` },\r\n                    React.createElement(\"td\", null,\r\n                        React.createElement(Button, { tag: Link, to: `${match.url}/${facture.id}`, color: \"link\", size: \"sm\" }, facture.id)),\r\n                    React.createElement(\"td\", null, facture.particulier ? 'true' : 'false'),\r\n                    React.createElement(\"td\", null, facture.raisonSociale),\r\n                    React.createElement(\"td\", null, facture.siret),\r\n                    React.createElement(\"td\", null, facture.nom),\r\n                    React.createElement(\"td\", null, facture.prenom),\r\n                    React.createElement(\"td\", null, facture.telephone),\r\n                    React.createElement(\"td\", null, facture.noVoie),\r\n                    React.createElement(\"td\", null, facture.rue),\r\n                    React.createElement(\"td\", null, facture.cp),\r\n                    React.createElement(\"td\", null, facture.ville),\r\n                    React.createElement(\"td\", null, facture.mail),\r\n                    React.createElement(\"td\", null, facture.paye ? 'true' : 'false'),\r\n                    React.createElement(\"td\", null, facture.tva),\r\n                    React.createElement(\"td\", null, facture.montant),\r\n                    React.createElement(\"td\", null, facture.importFichier ? (React.createElement(Link, { to: `import-fichier/${facture.importFichier.id}` }, facture.importFichier.id)) : ('')),\r\n                    React.createElement(\"td\", { className: \"text-right\" },\r\n                        React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\r\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${facture.id}`, color: \"info\", size: \"sm\" },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\r\n                                ' ',\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                    React.createElement(Translate, { contentKey: \"entity.action.view\" }, \"View\"))),\r\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${facture.id}/edit`, color: \"primary\", size: \"sm\" },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                                ' ',\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                    React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))),\r\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${facture.id}/delete`, color: \"danger\", size: \"sm\" },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                                ' ',\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                    React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\"))))))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" },\r\n                React.createElement(Translate, { contentKey: \"cleanclientApp.facture.home.notFound\" }, \"No Factures found\"))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ facture }) => ({\r\n    factureList: facture.entities\r\n});\r\nconst mapDispatchToProps = {\r\n    getEntities\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Facture);\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './facture.reducer';\r\nimport { IFacture } from 'app/shared/model/facture.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IFactureProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Facture extends React.Component<IFactureProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { factureList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"facture-heading\">\r\n          <Translate contentKey=\"cleanclientApp.facture.home.title\">Factures</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"cleanclientApp.facture.home.createLabel\">Create new Facture</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          {factureList && factureList.length > 0 ? (\r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.particulier\">Particulier</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.raisonSociale\">Raison Sociale</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.siret\">Siret</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.nom\">Nom</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.prenom\">Prenom</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.telephone\">Telephone</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.noVoie\">No Voie</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.rue\">Rue</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.cp\">Cp</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.ville\">Ville</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.mail\">Mail</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.paye\">Paye</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.tva\">Tva</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.montant\">Montant</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.facture.importFichier\">Import Fichier</Translate>\r\n                  </th>\r\n                  <th />\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {factureList.map((facture, i) => (\r\n                  <tr key={`entity-${i}`}>\r\n                    <td>\r\n                      <Button tag={Link} to={`${match.url}/${facture.id}`} color=\"link\" size=\"sm\">\r\n                        {facture.id}\r\n                      </Button>\r\n                    </td>\r\n                    <td>{facture.particulier ? 'true' : 'false'}</td>\r\n                    <td>{facture.raisonSociale}</td>\r\n                    <td>{facture.siret}</td>\r\n                    <td>{facture.nom}</td>\r\n                    <td>{facture.prenom}</td>\r\n                    <td>{facture.telephone}</td>\r\n                    <td>{facture.noVoie}</td>\r\n                    <td>{facture.rue}</td>\r\n                    <td>{facture.cp}</td>\r\n                    <td>{facture.ville}</td>\r\n                    <td>{facture.mail}</td>\r\n                    <td>{facture.paye ? 'true' : 'false'}</td>\r\n                    <td>{facture.tva}</td>\r\n                    <td>{facture.montant}</td>\r\n                    <td>\r\n                      {facture.importFichier ? (\r\n                        <Link to={`import-fichier/${facture.importFichier.id}`}>{facture.importFichier.id}</Link>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      <div className=\"btn-group flex-btn-group-container\">\r\n                        <Button tag={Link} to={`${match.url}/${facture.id}`} color=\"info\" size=\"sm\">\r\n                          <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                          <span className=\"d-none d-md-inline\">\r\n                            <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                          </span>\r\n                        </Button>\r\n                        <Button tag={Link} to={`${match.url}/${facture.id}/edit`} color=\"primary\" size=\"sm\">\r\n                          <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                          <span className=\"d-none d-md-inline\">\r\n                            <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                          </span>\r\n                        </Button>\r\n                        <Button tag={Link} to={`${match.url}/${facture.id}/delete`} color=\"danger\" size=\"sm\">\r\n                          <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                          <span className=\"d-none d-md-inline\">\r\n                            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            <div className=\"alert alert-warning\">\r\n              <Translate contentKey=\"cleanclientApp.facture.home.notFound\">No Factures found</Translate>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ facture }: IRootState) => ({\r\n  factureList: facture.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Facture);\r\n"]}]}