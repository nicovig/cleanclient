{"remainingRequest":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\configuration\\configuration.tsx","dependencies":[{"path":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\configuration\\configuration.tsx","mtime":1560254030668},{"path":"c:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input, Row, Col, Badge } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { getConfigurations, getEnv } from '../administration.reducer';\r\nexport class ConfigurationPage extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            filter: '',\r\n            reversePrefix: false,\r\n            reverseProperties: false\r\n        };\r\n        this.setFilter = evt => {\r\n            this.setState({\r\n                filter: evt.target.value\r\n            });\r\n        };\r\n        this.envFilterFn = configProp => configProp.toUpperCase().includes(this.state.filter.toUpperCase());\r\n        this.propsFilterFn = configProp => configProp.prefix.toUpperCase().includes(this.state.filter.toUpperCase());\r\n        this.reversePrefix = () => {\r\n            this.setState({\r\n                reversePrefix: !this.state.reversePrefix\r\n            });\r\n        };\r\n        this.reverseProperties = () => {\r\n            this.setState({\r\n                reverseProperties: !this.state.reverseProperties\r\n            });\r\n        };\r\n        this.getContextList = contexts => Object.values(contexts)\r\n            .map((v) => v.beans)\r\n            .reduce((acc, e) => (Object.assign({}, acc, e)));\r\n    }\r\n    componentDidMount() {\r\n        this.props.getConfigurations();\r\n        this.props.getEnv();\r\n    }\r\n    render() {\r\n        const { configuration } = this.props;\r\n        const { filter } = this.state;\r\n        const configProps = configuration && configuration.configProps ? configuration.configProps : {};\r\n        const env = configuration && configuration.env ? configuration.env : {};\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { id: \"configuration-page-heading\" },\r\n                React.createElement(Translate, { contentKey: \"configuration.title\" }, \"Configuration\")),\r\n            React.createElement(\"span\", null,\r\n                React.createElement(Translate, { contentKey: \"configuration.filter\" }, \"Filter\")),\r\n            ' ',\r\n            React.createElement(Input, { type: \"search\", value: filter, onChange: this.setFilter, name: \"search\", id: \"search\" }),\r\n            React.createElement(\"label\", null, \"Spring configuration\"),\r\n            React.createElement(Table, { className: \"table table-striped table-bordered table-responsive d-table\" },\r\n                React.createElement(\"thead\", null,\r\n                    React.createElement(\"tr\", null,\r\n                        React.createElement(\"th\", { onClick: this.reversePrefix },\r\n                            React.createElement(Translate, { contentKey: \"configuration.table.prefix\" }, \"Prefix\")),\r\n                        React.createElement(\"th\", { onClick: this.reverseProperties },\r\n                            React.createElement(Translate, { contentKey: \"configuration.table.properties\" }, \"Properties\")))),\r\n                React.createElement(\"tbody\", null, configProps.contexts\r\n                    ? Object.values(this.getContextList(configProps.contexts))\r\n                        .filter(this.propsFilterFn)\r\n                        .map((property, propIndex) => (React.createElement(\"tr\", { key: propIndex },\r\n                        React.createElement(\"td\", null, property['prefix']),\r\n                        React.createElement(\"td\", null, Object.keys(property['properties']).map((propKey, index) => (React.createElement(Row, { key: index },\r\n                            React.createElement(Col, { md: \"4\" }, propKey),\r\n                            React.createElement(Col, { md: \"8\" },\r\n                                React.createElement(Badge, { className: \"float-right badge-secondary break\" }, JSON.stringify(property['properties'][propKey]))))))))))\r\n                    : null)),\r\n            env.propertySources\r\n                ? env.propertySources.map((envKey, envIndex) => (React.createElement(\"div\", { key: envIndex },\r\n                    React.createElement(\"h4\", null,\r\n                        React.createElement(\"span\", null, envKey.name)),\r\n                    React.createElement(Table, { className: \"table table-sm table-striped table-bordered table-responsive d-table\" },\r\n                        React.createElement(\"thead\", null,\r\n                            React.createElement(\"tr\", { key: envIndex },\r\n                                React.createElement(\"th\", { className: \"w-40\" }, \"Property\"),\r\n                                React.createElement(\"th\", { className: \"w-60\" }, \"Value\"))),\r\n                        React.createElement(\"tbody\", null, Object.keys(envKey.properties)\r\n                            .filter(this.envFilterFn)\r\n                            .map((propKey, propIndex) => (React.createElement(\"tr\", { key: propIndex },\r\n                            React.createElement(\"td\", { className: \"break\" }, propKey),\r\n                            React.createElement(\"td\", { className: \"break\" },\r\n                                React.createElement(\"span\", { className: \"float-right badge badge-secondary break\" }, envKey.properties[propKey].value))))))))))\r\n                : null));\r\n    }\r\n}\r\nconst mapStateToProps = ({ administration }) => ({\r\n    configuration: administration.configuration,\r\n    isFetching: administration.loading\r\n});\r\nconst mapDispatchToProps = { getConfigurations, getEnv };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationPage);\r\n",{"version":3,"file":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\configuration\\configuration.tsx","sourceRoot":"","sources":["c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\configuration\\configuration.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Input, Row, Col, Badge } from 'reactstrap';\nimport { Translate } from 'react-jhipster';\n\nimport { getConfigurations, getEnv } from '../administration.reducer';\nimport { IRootState } from 'app/shared/reducers';\n\nexport interface IConfigurationPageProps extends StateProps, DispatchProps {}\n\nexport interface IConfigurationPageState {\n  filter: string;\n  reversePrefix: boolean;\n  reverseProperties: boolean;\n}\n\nexport class ConfigurationPage extends React.Component<IConfigurationPageProps, IConfigurationPageState> {\n  state: IConfigurationPageState = {\n    filter: '',\n    reversePrefix: false,\n    reverseProperties: false\n  };\n\n  componentDidMount() {\n    this.props.getConfigurations();\n    this.props.getEnv();\n  }\n\n  setFilter = evt => {\n    this.setState({\n      filter: evt.target.value\n    });\n  };\n\n  envFilterFn = configProp => configProp.toUpperCase().includes(this.state.filter.toUpperCase());\n  propsFilterFn = configProp => configProp.prefix.toUpperCase().includes(this.state.filter.toUpperCase());\n\n  reversePrefix = () => {\n    this.setState({\n      reversePrefix: !this.state.reversePrefix\n    });\n  };\n\n  reverseProperties = () => {\n    this.setState({\n      reverseProperties: !this.state.reverseProperties\n    });\n  };\n\n  getContextList = contexts =>\n    Object.values(contexts)\n      .map((v: any) => v.beans)\n      .reduce((acc, e) => ({ ...acc, ...e }));\n\n  render() {\n    const { configuration } = this.props;\n    const { filter } = this.state;\n    const configProps = configuration && configuration.configProps ? configuration.configProps : {};\n    const env = configuration && configuration.env ? configuration.env : {};\n    return (\n      <div>\n        <h2 id=\"configuration-page-heading\">\n          <Translate contentKey=\"configuration.title\">Configuration</Translate>\n        </h2>\n        <span>\n          <Translate contentKey=\"configuration.filter\">Filter</Translate>\n        </span>{' '}\n        <Input type=\"search\" value={filter} onChange={this.setFilter} name=\"search\" id=\"search\" />\n        <label>Spring configuration</label>\n        <Table className=\"table table-striped table-bordered table-responsive d-table\">\n          <thead>\n            <tr>\n              <th onClick={this.reversePrefix}>\n                <Translate contentKey=\"configuration.table.prefix\">Prefix</Translate>\n              </th>\n              <th onClick={this.reverseProperties}>\n                <Translate contentKey=\"configuration.table.properties\">Properties</Translate>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {configProps.contexts\n              ? Object.values(this.getContextList(configProps.contexts))\n                  .filter(this.propsFilterFn)\n                  .map((property, propIndex) => (\n                    <tr key={propIndex}>\n                      <td>{property['prefix']}</td>\n                      <td>\n                        {Object.keys(property['properties']).map((propKey, index) => (\n                          <Row key={index}>\n                            <Col md=\"4\">{propKey}</Col>\n                            <Col md=\"8\">\n                              <Badge className=\"float-right badge-secondary break\">{JSON.stringify(property['properties'][propKey])}</Badge>\n                            </Col>\n                          </Row>\n                        ))}\n                      </td>\n                    </tr>\n                  ))\n              : null}\n          </tbody>\n        </Table>\n        {env.propertySources\n          ? env.propertySources.map((envKey, envIndex) => (\n              <div key={envIndex}>\n                <h4>\n                  <span>{envKey.name}</span>\n                </h4>\n                <Table className=\"table table-sm table-striped table-bordered table-responsive d-table\">\n                  <thead>\n                    <tr key={envIndex}>\n                      <th className=\"w-40\">Property</th>\n                      <th className=\"w-60\">Value</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Object.keys(envKey.properties)\n                      .filter(this.envFilterFn)\n                      .map((propKey, propIndex) => (\n                        <tr key={propIndex}>\n                          <td className=\"break\">{propKey}</td>\n                          <td className=\"break\">\n                            <span className=\"float-right badge badge-secondary break\">{envKey.properties[propKey].value}</span>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n              </div>\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ administration }: IRootState) => ({\n  configuration: administration.configuration,\n  isFetching: administration.loading\n});\n\nconst mapDispatchToProps = { getConfigurations, getEnv };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConfigurationPage);\n"]}]}