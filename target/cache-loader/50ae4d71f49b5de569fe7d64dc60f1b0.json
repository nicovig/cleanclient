{"remainingRequest":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\shared\\reducers\\authentication.ts","dependencies":[{"path":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\shared\\reducers\\authentication.ts","mtime":1560254030175},{"path":"c:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { Storage } from 'react-jhipster';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { setLocale } from 'app/shared/reducers/locale';\r\nexport const ACTION_TYPES = {\r\n    LOGIN: 'authentication/LOGIN',\r\n    GET_SESSION: 'authentication/GET_SESSION',\r\n    LOGOUT: 'authentication/LOGOUT',\r\n    CLEAR_AUTH: 'authentication/CLEAR_AUTH',\r\n    ERROR_MESSAGE: 'authentication/ERROR_MESSAGE'\r\n};\r\nconst AUTH_TOKEN_KEY = 'jhi-authenticationToken';\r\nconst initialState = {\r\n    loading: false,\r\n    isAuthenticated: false,\r\n    loginSuccess: false,\r\n    loginError: false,\r\n    showModalLogin: false,\r\n    account: {},\r\n    errorMessage: null,\r\n    redirectMessage: null,\r\n    sessionHasBeenFetched: false,\r\n    idToken: null,\r\n    logoutUrl: null\r\n};\r\n// Reducer\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.LOGIN):\r\n        case REQUEST(ACTION_TYPES.GET_SESSION):\r\n            return Object.assign({}, state, { loading: true });\r\n        case FAILURE(ACTION_TYPES.LOGIN):\r\n            return Object.assign({}, initialState, { errorMessage: action.payload, showModalLogin: true, loginError: true });\r\n        case FAILURE(ACTION_TYPES.GET_SESSION):\r\n            return Object.assign({}, state, { loading: false, isAuthenticated: false, sessionHasBeenFetched: true, showModalLogin: true, errorMessage: action.payload });\r\n        case SUCCESS(ACTION_TYPES.LOGIN):\r\n            return Object.assign({}, state, { loading: false, loginError: false, showModalLogin: false, loginSuccess: true });\r\n        case ACTION_TYPES.LOGOUT:\r\n            return Object.assign({}, initialState, { showModalLogin: true });\r\n        case SUCCESS(ACTION_TYPES.GET_SESSION): {\r\n            const isAuthenticated = action.payload && action.payload.data && action.payload.data.activated;\r\n            return Object.assign({}, state, { isAuthenticated, loading: false, sessionHasBeenFetched: true, account: action.payload.data });\r\n        }\r\n        case ACTION_TYPES.ERROR_MESSAGE:\r\n            return Object.assign({}, initialState, { showModalLogin: true, redirectMessage: action.message });\r\n        case ACTION_TYPES.CLEAR_AUTH:\r\n            return Object.assign({}, state, { loading: false, showModalLogin: true, isAuthenticated: false });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const displayAuthError = message => ({ type: ACTION_TYPES.ERROR_MESSAGE, message });\r\nexport const getSession = () => (dispatch, getState) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    yield dispatch({\r\n        type: ACTION_TYPES.GET_SESSION,\r\n        payload: axios.get('api/account')\r\n    });\r\n    const { account } = getState().authentication;\r\n    if (account && account.langKey) {\r\n        const langKey = Storage.session.get('locale', account.langKey);\r\n        yield dispatch(setLocale(langKey));\r\n    }\r\n});\r\nexport const login = (username, password, rememberMe = false) => (dispatch, getState) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.LOGIN,\r\n        payload: axios.post('api/authenticate', { username, password, rememberMe })\r\n    });\r\n    const bearerToken = result.value.headers.authorization;\r\n    if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {\r\n        const jwt = bearerToken.slice(7, bearerToken.length);\r\n        if (rememberMe) {\r\n            Storage.local.set(AUTH_TOKEN_KEY, jwt);\r\n        }\r\n        else {\r\n            Storage.session.set(AUTH_TOKEN_KEY, jwt);\r\n        }\r\n    }\r\n    yield dispatch(getSession());\r\n});\r\nexport const clearAuthToken = () => {\r\n    if (Storage.local.get(AUTH_TOKEN_KEY)) {\r\n        Storage.local.remove(AUTH_TOKEN_KEY);\r\n    }\r\n    if (Storage.session.get(AUTH_TOKEN_KEY)) {\r\n        Storage.session.remove(AUTH_TOKEN_KEY);\r\n    }\r\n};\r\nexport const logout = () => dispatch => {\r\n    clearAuthToken();\r\n    dispatch({\r\n        type: ACTION_TYPES.LOGOUT\r\n    });\r\n};\r\nexport const clearAuthentication = messageKey => (dispatch, getState) => {\r\n    clearAuthToken();\r\n    dispatch(displayAuthError(messageKey));\r\n    dispatch({\r\n        type: ACTION_TYPES.CLEAR_AUTH\r\n    });\r\n};\r\n",{"version":3,"file":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\shared\\reducers\\authentication.ts","sourceRoot":"","sources":["c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\shared\\reducers\\authentication.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Storage } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nimport { setLocale } from 'app/shared/reducers/locale';\n\nexport const ACTION_TYPES = {\n  LOGIN: 'authentication/LOGIN',\n  GET_SESSION: 'authentication/GET_SESSION',\n  LOGOUT: 'authentication/LOGOUT',\n  CLEAR_AUTH: 'authentication/CLEAR_AUTH',\n  ERROR_MESSAGE: 'authentication/ERROR_MESSAGE'\n};\n\nconst AUTH_TOKEN_KEY = 'jhi-authenticationToken';\n\nconst initialState = {\n  loading: false,\n  isAuthenticated: false,\n  loginSuccess: false,\n  loginError: false, // Errors returned from server side\n  showModalLogin: false,\n  account: {} as any,\n  errorMessage: null as string, // Errors returned from server side\n  redirectMessage: null as string,\n  sessionHasBeenFetched: false,\n  idToken: null as string,\n  logoutUrl: null as string\n};\n\nexport type AuthenticationState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: AuthenticationState = initialState, action): AuthenticationState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.LOGIN):\n    case REQUEST(ACTION_TYPES.GET_SESSION):\n      return {\n        ...state,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.LOGIN):\n      return {\n        ...initialState,\n        errorMessage: action.payload,\n        showModalLogin: true,\n        loginError: true\n      };\n    case FAILURE(ACTION_TYPES.GET_SESSION):\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        sessionHasBeenFetched: true,\n        showModalLogin: true,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.LOGIN):\n      return {\n        ...state,\n        loading: false,\n        loginError: false,\n        showModalLogin: false,\n        loginSuccess: true\n      };\n    case ACTION_TYPES.LOGOUT:\n      return {\n        ...initialState,\n        showModalLogin: true\n      };\n    case SUCCESS(ACTION_TYPES.GET_SESSION): {\n      const isAuthenticated = action.payload && action.payload.data && action.payload.data.activated;\n      return {\n        ...state,\n        isAuthenticated,\n        loading: false,\n        sessionHasBeenFetched: true,\n        account: action.payload.data\n      };\n    }\n    case ACTION_TYPES.ERROR_MESSAGE:\n      return {\n        ...initialState,\n        showModalLogin: true,\n        redirectMessage: action.message\n      };\n    case ACTION_TYPES.CLEAR_AUTH:\n      return {\n        ...state,\n        loading: false,\n        showModalLogin: true,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport const displayAuthError = message => ({ type: ACTION_TYPES.ERROR_MESSAGE, message });\n\nexport const getSession = () => async (dispatch, getState) => {\n  await dispatch({\n    type: ACTION_TYPES.GET_SESSION,\n    payload: axios.get('api/account')\n  });\n\n  const { account } = getState().authentication;\n  if (account && account.langKey) {\n    const langKey = Storage.session.get('locale', account.langKey);\n    await dispatch(setLocale(langKey));\n  }\n};\n\nexport const login = (username, password, rememberMe = false) => async (dispatch, getState) => {\n  const result = await dispatch({\n    type: ACTION_TYPES.LOGIN,\n    payload: axios.post('api/authenticate', { username, password, rememberMe })\n  });\n  const bearerToken = result.value.headers.authorization;\n  if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {\n    const jwt = bearerToken.slice(7, bearerToken.length);\n    if (rememberMe) {\n      Storage.local.set(AUTH_TOKEN_KEY, jwt);\n    } else {\n      Storage.session.set(AUTH_TOKEN_KEY, jwt);\n    }\n  }\n  await dispatch(getSession());\n};\n\nexport const clearAuthToken = () => {\n  if (Storage.local.get(AUTH_TOKEN_KEY)) {\n    Storage.local.remove(AUTH_TOKEN_KEY);\n  }\n  if (Storage.session.get(AUTH_TOKEN_KEY)) {\n    Storage.session.remove(AUTH_TOKEN_KEY);\n  }\n};\n\nexport const logout = () => dispatch => {\n  clearAuthToken();\n  dispatch({\n    type: ACTION_TYPES.LOGOUT\n  });\n};\n\nexport const clearAuthentication = messageKey => (dispatch, getState) => {\n  clearAuthToken();\n  dispatch(displayAuthError(messageKey));\n  dispatch({\n    type: ACTION_TYPES.CLEAR_AUTH\n  });\n};\n"]}]}