{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture-update.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture-update.tsx","mtime":1563261494643},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities as getImportFichiers } from 'app/entities/import-fichier/import-fichier.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './facture.reducer';\r\nexport class FactureUpdate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.saveEntity = (event, errors, values) => {\r\n            if (errors.length === 0) {\r\n                const { factureEntity } = this.props;\r\n                const entity = Object.assign({}, factureEntity, values);\r\n                if (this.state.isNew) {\r\n                    this.props.createEntity(entity);\r\n                }\r\n                else {\r\n                    this.props.updateEntity(entity);\r\n                }\r\n            }\r\n        };\r\n        this.handleClose = () => {\r\n            this.props.history.push('/entity/facture');\r\n        };\r\n        this.state = {\r\n            importFichierId: '0',\r\n            isNew: !this.props.match.params || !this.props.match.params.id\r\n        };\r\n    }\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n            this.handleClose();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.isNew) {\r\n            this.props.reset();\r\n        }\r\n        else {\r\n            this.props.getEntity(this.props.match.params.id);\r\n        }\r\n        this.props.getImportFichiers();\r\n    }\r\n    render() {\r\n        const { factureEntity, importFichiers, loading, updating } = this.props;\r\n        const { isNew } = this.state;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h2\", { id: \"cleanclientApp.facture.home.createOrEditLabel\" },\r\n                        React.createElement(Translate, { contentKey: \"cleanclientApp.facture.home.createOrEditLabel\" }, \"Create or edit a Facture\")))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : factureEntity, onSubmit: this.saveEntity },\r\n                    !isNew ? (React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"facture-id\" },\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(AvInput, { id: \"facture-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"particulierLabel\", check: true },\r\n                            React.createElement(AvInput, { id: \"facture-particulier\", type: \"checkbox\", className: \"form-control\", name: \"particulier\" }),\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.particulier\" }, \"Particulier\"))),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"raisonSocialeLabel\", for: \"facture-raisonSociale\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.raisonSociale\" }, \"Raison Sociale\")),\r\n                        React.createElement(AvField, { id: \"facture-raisonSociale\", type: \"text\", name: \"raisonSociale\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"siretLabel\", for: \"facture-siret\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.siret\" }, \"Siret\")),\r\n                        React.createElement(AvField, { id: \"facture-siret\", type: \"text\", name: \"siret\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"nomLabel\", for: \"facture-nom\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.nom\" }, \"Nom\")),\r\n                        React.createElement(AvField, { id: \"facture-nom\", type: \"text\", name: \"nom\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"prenomLabel\", for: \"facture-prenom\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.prenom\" }, \"Prenom\")),\r\n                        React.createElement(AvField, { id: \"facture-prenom\", type: \"text\", name: \"prenom\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"telephoneLabel\", for: \"facture-telephone\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.telephone\" }, \"Telephone\")),\r\n                        React.createElement(AvField, { id: \"facture-telephone\", type: \"text\", name: \"telephone\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"noVoieLabel\", for: \"facture-noVoie\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.noVoie\" }, \"No Voie\")),\r\n                        React.createElement(AvField, { id: \"facture-noVoie\", type: \"text\", name: \"noVoie\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"rueLabel\", for: \"facture-rue\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.rue\" }, \"Rue\")),\r\n                        React.createElement(AvField, { id: \"facture-rue\", type: \"text\", name: \"rue\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"cpLabel\", for: \"facture-cp\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.cp\" }, \"Cp\")),\r\n                        React.createElement(AvField, { id: \"facture-cp\", type: \"text\", name: \"cp\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"villeLabel\", for: \"facture-ville\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.ville\" }, \"Ville\")),\r\n                        React.createElement(AvField, { id: \"facture-ville\", type: \"text\", name: \"ville\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"mailLabel\", for: \"facture-mail\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.mail\" }, \"Mail\")),\r\n                        React.createElement(AvField, { id: \"facture-mail\", type: \"text\", name: \"mail\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"payeLabel\", check: true },\r\n                            React.createElement(AvInput, { id: \"facture-paye\", type: \"checkbox\", className: \"form-control\", name: \"paye\" }),\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.paye\" }, \"Paye\"))),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"tvaLabel\", for: \"facture-tva\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.tva\" }, \"Tva\")),\r\n                        React.createElement(AvField, { id: \"facture-tva\", type: \"string\", className: \"form-control\", name: \"tva\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"montantLabel\", for: \"facture-montant\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.montant\" }, \"Montant\")),\r\n                        React.createElement(AvField, { id: \"facture-montant\", type: \"string\", className: \"form-control\", name: \"montant\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"facture-importFichier\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.facture.importFichier\" }, \"Import Fichier\")),\r\n                        React.createElement(AvInput, { id: \"facture-importFichier\", type: \"select\", className: \"form-control\", name: \"importFichier.id\" },\r\n                            React.createElement(\"option\", { value: \"\", key: \"0\" }),\r\n                            importFichiers\r\n                                ? importFichiers.map(otherEntity => (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)))\r\n                                : null)),\r\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/entity/facture\", replace: true, color: \"info\" },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                            React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n    }\r\n}\r\nconst mapStateToProps = (storeState) => ({\r\n    importFichiers: storeState.importFichier.entities,\r\n    factureEntity: storeState.facture.entity,\r\n    loading: storeState.facture.loading,\r\n    updating: storeState.facture.updating,\r\n    updateSuccess: storeState.facture.updateSuccess\r\n});\r\nconst mapDispatchToProps = {\r\n    getImportFichiers,\r\n    getEntity,\r\n    updateEntity,\r\n    createEntity,\r\n    reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FactureUpdate);\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture-update.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\facture\\facture-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvFeedback, AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IImportFichier } from 'app/shared/model/import-fichier.model';\r\nimport { getEntities as getImportFichiers } from 'app/entities/import-fichier/import-fichier.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './facture.reducer';\r\nimport { IFacture } from 'app/shared/model/facture.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IFactureUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IFactureUpdateState {\r\n  isNew: boolean;\r\n  importFichierId: string;\r\n}\r\n\r\nexport class FactureUpdate extends React.Component<IFactureUpdateProps, IFactureUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      importFichierId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getImportFichiers();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { factureEntity } = this.props;\r\n      const entity = {\r\n        ...factureEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/facture');\r\n  };\r\n\r\n  render() {\r\n    const { factureEntity, importFichiers, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"cleanclientApp.facture.home.createOrEditLabel\">\r\n              <Translate contentKey=\"cleanclientApp.facture.home.createOrEditLabel\">Create or edit a Facture</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : factureEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"facture-id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"facture-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"particulierLabel\" check>\r\n                    <AvInput id=\"facture-particulier\" type=\"checkbox\" className=\"form-control\" name=\"particulier\" />\r\n                    <Translate contentKey=\"cleanclientApp.facture.particulier\">Particulier</Translate>\r\n                  </Label>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"raisonSocialeLabel\" for=\"facture-raisonSociale\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.raisonSociale\">Raison Sociale</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-raisonSociale\" type=\"text\" name=\"raisonSociale\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"siretLabel\" for=\"facture-siret\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.siret\">Siret</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-siret\" type=\"text\" name=\"siret\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"nomLabel\" for=\"facture-nom\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.nom\">Nom</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-nom\" type=\"text\" name=\"nom\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"prenomLabel\" for=\"facture-prenom\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.prenom\">Prenom</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-prenom\" type=\"text\" name=\"prenom\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"telephoneLabel\" for=\"facture-telephone\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.telephone\">Telephone</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-telephone\" type=\"text\" name=\"telephone\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"noVoieLabel\" for=\"facture-noVoie\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.noVoie\">No Voie</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-noVoie\" type=\"text\" name=\"noVoie\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"rueLabel\" for=\"facture-rue\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.rue\">Rue</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-rue\" type=\"text\" name=\"rue\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"cpLabel\" for=\"facture-cp\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.cp\">Cp</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-cp\" type=\"text\" name=\"cp\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"villeLabel\" for=\"facture-ville\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.ville\">Ville</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-ville\" type=\"text\" name=\"ville\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"mailLabel\" for=\"facture-mail\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.mail\">Mail</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-mail\" type=\"text\" name=\"mail\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"payeLabel\" check>\r\n                    <AvInput id=\"facture-paye\" type=\"checkbox\" className=\"form-control\" name=\"paye\" />\r\n                    <Translate contentKey=\"cleanclientApp.facture.paye\">Paye</Translate>\r\n                  </Label>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"tvaLabel\" for=\"facture-tva\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.tva\">Tva</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-tva\" type=\"string\" className=\"form-control\" name=\"tva\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"montantLabel\" for=\"facture-montant\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.montant\">Montant</Translate>\r\n                  </Label>\r\n                  <AvField id=\"facture-montant\" type=\"string\" className=\"form-control\" name=\"montant\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"facture-importFichier\">\r\n                    <Translate contentKey=\"cleanclientApp.facture.importFichier\">Import Fichier</Translate>\r\n                  </Label>\r\n                  <AvInput id=\"facture-importFichier\" type=\"select\" className=\"form-control\" name=\"importFichier.id\">\r\n                    <option value=\"\" key=\"0\" />\r\n                    {importFichiers\r\n                      ? importFichiers.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/facture\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  importFichiers: storeState.importFichier.entities,\r\n  factureEntity: storeState.facture.entity,\r\n  loading: storeState.facture.loading,\r\n  updating: storeState.facture.updating,\r\n  updateSuccess: storeState.facture.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getImportFichiers,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FactureUpdate);\r\n"]}]}