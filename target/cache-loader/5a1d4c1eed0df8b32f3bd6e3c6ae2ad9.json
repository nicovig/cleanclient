{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\importfichier\\importfichier-detail.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\importfichier\\importfichier-detail.tsx","mtime":1561378302997},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './importfichier.reducer';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nexport class ImportfichierDetail extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    }\r\n    render() {\r\n        const { importfichierEntity } = this.props;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    React.createElement(Translate, { contentKey: \"cleanclientApp.importfichier.detail.title\" }, \"Importfichier\"),\r\n                    \" [\",\r\n                    React.createElement(\"b\", null, importfichierEntity.id),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"dateDeDebut\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importfichier.dateDeDebut\" }, \"Date De Debut\"))),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(TextFormat, { value: importfichierEntity.dateDeDebut, type: \"date\", format: APP_LOCAL_DATE_FORMAT })),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"traitementId\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importfichier.traitementId\" }, \"Traitement Id\"))),\r\n                    React.createElement(\"dd\", null, importfichierEntity.traitementId),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"externalId\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importfichier.externalId\" }, \"External Id\"))),\r\n                    React.createElement(\"dd\", null, importfichierEntity.externalId),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"cleanclientApp.importfichier.user\" }, \"User\")),\r\n                    React.createElement(\"dd\", null, importfichierEntity.user ? importfichierEntity.user.id : '')),\r\n                React.createElement(Button, { tag: Link, to: \"/entity/importfichier\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: `/entity/importfichier/${importfichierEntity.id}/edit`, replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ importfichier }) => ({\r\n    importfichierEntity: importfichier.entity\r\n});\r\nconst mapDispatchToProps = { getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportfichierDetail);\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\importfichier\\importfichier-detail.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\importfichier\\importfichier-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './importfichier.reducer';\nimport { IImportfichier } from 'app/shared/model/importfichier.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IImportfichierDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class ImportfichierDetail extends React.Component<IImportfichierDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { importfichierEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"cleanclientApp.importfichier.detail.title\">Importfichier</Translate> [<b>{importfichierEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"dateDeDebut\">\n                <Translate contentKey=\"cleanclientApp.importfichier.dateDeDebut\">Date De Debut</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={importfichierEntity.dateDeDebut} type=\"date\" format={APP_LOCAL_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"traitementId\">\n                <Translate contentKey=\"cleanclientApp.importfichier.traitementId\">Traitement Id</Translate>\n              </span>\n            </dt>\n            <dd>{importfichierEntity.traitementId}</dd>\n            <dt>\n              <span id=\"externalId\">\n                <Translate contentKey=\"cleanclientApp.importfichier.externalId\">External Id</Translate>\n              </span>\n            </dt>\n            <dd>{importfichierEntity.externalId}</dd>\n            <dt>\n              <Translate contentKey=\"cleanclientApp.importfichier.user\">User</Translate>\n            </dt>\n            <dd>{importfichierEntity.user ? importfichierEntity.user.id : ''}</dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/importfichier\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/entity/importfichier/${importfichierEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ importfichier }: IRootState) => ({\n  importfichierEntity: importfichier.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportfichierDetail);\n"]}]}