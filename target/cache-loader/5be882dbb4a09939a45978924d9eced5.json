{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-fichier\\import-fichier.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-fichier\\import-fichier.tsx","mtime":1563531303143},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities } from './import-fichier.reducer';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\r\nexport class ImportFichier extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEntities();\r\n    }\r\n    render() {\r\n        const { importFichierList, match } = this.props;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { id: \"import-fichier-heading\" },\r\n                React.createElement(Translate, { contentKey: \"cleanclientApp.importFichier.home.title\" }, \"Import Fichiers\"),\r\n                React.createElement(Link, { to: `${match.url}/new`, className: \"btn btn-primary float-right jh-create-entity\", id: \"jh-create-entity\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"plus\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Translate, { contentKey: \"cleanclientApp.importFichier.home.createLabel\" }, \"Create new Import Fichier\"))),\r\n            React.createElement(\"div\", { className: \"table-responsive\" },\r\n                React.createElement(Table, { responsive: true },\r\n                    React.createElement(\"thead\", null,\r\n                        React.createElement(\"tr\", null,\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"cleanclientApp.importFichier.traitementId\" }, \"Traitement Id\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"cleanclientApp.importFichier.traitementId\" }, \"Traitement Prospect Id\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"cleanclientApp.importFichier.dateDeDebut\" }, \"Date De Debut\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"cleanclientApp.importFichier.user\" }, \"User\")),\r\n                            React.createElement(\"th\", null))),\r\n                    React.createElement(\"tbody\", null, importFichierList.map((importFichier, i) => (React.createElement(\"tr\", { key: `entity-${i}` },\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${importFichier.id}`, color: \"link\", size: \"sm\" }, importFichier.id)),\r\n                        React.createElement(\"td\", null, importFichier.traitementId),\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(TextFormat, { type: \"date\", value: importFichier.dateDeDebut, format: APP_TIMESTAMP_FORMAT })),\r\n                        React.createElement(\"td\", null, importFichier.user ? importFichier.user.id : ''),\r\n                        React.createElement(\"td\", { className: \"text-right\" },\r\n                            React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\r\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${importFichier.id}`, color: \"info\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\r\n                                    ' ',\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.view\" }, \"View\"))),\r\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${importFichier.id}/edit`, color: \"primary\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                                    ' ',\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))),\r\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${importFichier.id}/delete`, color: \"danger\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                                    ' ',\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\")))))))))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ importFichier }) => ({\r\n    importFichierList: importFichier.entities\r\n});\r\nconst mapDispatchToProps = {\r\n    getEntities\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportFichier);\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-fichier\\import-fichier.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-fichier\\import-fichier.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, getEntities } from './import-fichier.reducer';\r\nimport { IImportFichier } from 'app/shared/model/import-fichier.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IImportFichierProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class ImportFichier extends React.Component<IImportFichierProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { importFichierList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"import-fichier-heading\">\r\n          <Translate contentKey=\"cleanclientApp.importFichier.home.title\">Import Fichiers</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"cleanclientApp.importFichier.home.createLabel\">Create new Import Fichier</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"cleanclientApp.importFichier.traitementId\">Traitement Id</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"cleanclientApp.importFichier.traitementId\">Traitement Prospect Id</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"cleanclientApp.importFichier.dateDeDebut\">Date De Debut</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"cleanclientApp.importFichier.user\">User</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {importFichierList.map((importFichier, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${importFichier.id}`} color=\"link\" size=\"sm\">\r\n                      {importFichier.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{importFichier.traitementId}</td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={importFichier.dateDeDebut} format={APP_TIMESTAMP_FORMAT} />\r\n                  </td>\r\n                  <td>{importFichier.user ? importFichier.user.id : ''}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${importFichier.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${importFichier.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${importFichier.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ importFichier }: IRootState) => ({\r\n  importFichierList: importFichier.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ImportFichier);\r\n"]}]}