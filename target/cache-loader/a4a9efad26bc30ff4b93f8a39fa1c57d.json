{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\ligne-prospect\\ligne-prospect.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\ligne-prospect\\ligne-prospect.tsx","mtime":1563530778248},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities } from './ligne-prospect.reducer';\r\nexport class LigneProspect extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEntities();\r\n    }\r\n    render() {\r\n        const { ligneProspectList, match } = this.props;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { id: \"ligne-prospect-heading\" },\r\n                React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.home.title\" }, \"Ligne Prospects\"),\r\n                React.createElement(Link, { to: `${match.url}/new`, className: \"btn btn-primary float-right jh-create-entity\", id: \"jh-create-entity\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"plus\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.home.createLabel\" }, \"Create new Ligne Prospect\"))),\r\n            React.createElement(\"div\", { className: \"table-responsive\" }, ligneProspectList && ligneProspectList.length > 0 ? (React.createElement(Table, { responsive: true },\r\n                React.createElement(\"thead\", null,\r\n                    React.createElement(\"tr\", null,\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneSiret\" }, \"Sirene Siret\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneDenomination\" }, \"Sirene Denomination\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneHousenumber\" }, \"Sirene Housenumber\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneStreet\" }, \"Sirene Street\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneCodepostal\" }, \"Sirene Codepostal\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneVille\" }, \"Sirene Ville\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneLatitude\" }, \"Sirene Latitude\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneLongitude\" }, \"Sirene Longitude\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneEtatadministratif\" }, \"Sirene Etatadministratif\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneNomenclature\" }, \"Sirene Nomenclature\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneTrancheeffectif\" }, \"Sirene Trancheeffectif\")),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.importLigne\" }, \"Import Ligne\")),\r\n                        React.createElement(\"th\", null))),\r\n                React.createElement(\"tbody\", null, ligneProspectList.map((ligneProspect, i) => (React.createElement(\"tr\", { key: `entity-${i}` },\r\n                    React.createElement(\"td\", null,\r\n                        React.createElement(Button, { tag: Link, to: `${match.url}/${ligneProspect.id}`, color: \"link\", size: \"sm\" }, ligneProspect.id)),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneSiret),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneDenomination),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneHousenumber),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneStreet),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneCodepostal),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneVille),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneLatitude),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneLongitude),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneEtatadministratif),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneNomenclature),\r\n                    React.createElement(\"td\", null, ligneProspect.sireneTrancheeffectif),\r\n                    React.createElement(\"td\", null, ligneProspect.importLigne ? (React.createElement(Link, { to: `import-ligne/${ligneProspect.importLigne.id}` }, ligneProspect.importLigne.id)) : ('')),\r\n                    React.createElement(\"td\", { className: \"text-right\" },\r\n                        React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\r\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${ligneProspect.id}`, color: \"info\", size: \"sm\" },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\r\n                                ' ',\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                    React.createElement(Translate, { contentKey: \"entity.action.view\" }, \"View\"))),\r\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${ligneProspect.id}/edit`, color: \"primary\", size: \"sm\" },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                                ' ',\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                    React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))),\r\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${ligneProspect.id}/delete`, color: \"danger\", size: \"sm\" },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                                ' ',\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                    React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\"))))))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" },\r\n                React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.home.notFound\" }, \"No Ligne Prospects found\"))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ ligneProspect }) => ({\r\n    ligneProspectList: ligneProspect.entities\r\n});\r\nconst mapDispatchToProps = {\r\n    getEntities\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LigneProspect);\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\ligne-prospect\\ligne-prospect.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\ligne-prospect\\ligne-prospect.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './ligne-prospect.reducer';\r\nimport { ILigneProspect } from 'app/shared/model/ligne-prospect.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ILigneProspectProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class LigneProspect extends React.Component<ILigneProspectProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { ligneProspectList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"ligne-prospect-heading\">\r\n          <Translate contentKey=\"cleanclientApp.ligneProspect.home.title\">Ligne Prospects</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"cleanclientApp.ligneProspect.home.createLabel\">Create new Ligne Prospect</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          {ligneProspectList && ligneProspectList.length > 0 ? (\r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneSiret\">Sirene Siret</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneDenomination\">Sirene Denomination</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneHousenumber\">Sirene Housenumber</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneStreet\">Sirene Street</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneCodepostal\">Sirene Codepostal</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneVille\">Sirene Ville</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneLatitude\">Sirene Latitude</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneLongitude\">Sirene Longitude</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneEtatadministratif\">Sirene Etatadministratif</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneNomenclature\">Sirene Nomenclature</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneTrancheeffectif\">Sirene Trancheeffectif</Translate>\r\n                  </th>\r\n                  <th>\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.importLigne\">Import Ligne</Translate>\r\n                  </th>\r\n                  <th />\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {ligneProspectList.map((ligneProspect, i) => (\r\n                  <tr key={`entity-${i}`}>\r\n                    <td>\r\n                      <Button tag={Link} to={`${match.url}/${ligneProspect.id}`} color=\"link\" size=\"sm\">\r\n                        {ligneProspect.id}\r\n                      </Button>\r\n                    </td>\r\n                    <td>{ligneProspect.sireneSiret}</td>\r\n                    <td>{ligneProspect.sireneDenomination}</td>\r\n                    <td>{ligneProspect.sireneHousenumber}</td>\r\n                    <td>{ligneProspect.sireneStreet}</td>\r\n                    <td>{ligneProspect.sireneCodepostal}</td>\r\n                    <td>{ligneProspect.sireneVille}</td>\r\n                    <td>{ligneProspect.sireneLatitude}</td>\r\n                    <td>{ligneProspect.sireneLongitude}</td>\r\n                    <td>{ligneProspect.sireneEtatadministratif}</td>\r\n                    <td>{ligneProspect.sireneNomenclature}</td>\r\n                    <td>{ligneProspect.sireneTrancheeffectif}</td>\r\n                    <td>\r\n                      {ligneProspect.importLigne ? (\r\n                        <Link to={`import-ligne/${ligneProspect.importLigne.id}`}>{ligneProspect.importLigne.id}</Link>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      <div className=\"btn-group flex-btn-group-container\">\r\n                        <Button tag={Link} to={`${match.url}/${ligneProspect.id}`} color=\"info\" size=\"sm\">\r\n                          <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                          <span className=\"d-none d-md-inline\">\r\n                            <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                          </span>\r\n                        </Button>\r\n                        <Button tag={Link} to={`${match.url}/${ligneProspect.id}/edit`} color=\"primary\" size=\"sm\">\r\n                          <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                          <span className=\"d-none d-md-inline\">\r\n                            <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                          </span>\r\n                        </Button>\r\n                        <Button tag={Link} to={`${match.url}/${ligneProspect.id}/delete`} color=\"danger\" size=\"sm\">\r\n                          <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                          <span className=\"d-none d-md-inline\">\r\n                            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            <div className=\"alert alert-warning\">\r\n              <Translate contentKey=\"cleanclientApp.ligneProspect.home.notFound\">No Ligne Prospects found</Translate>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ligneProspect }: IRootState) => ({\r\n  ligneProspectList: ligneProspect.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LigneProspect);\r\n"]}]}