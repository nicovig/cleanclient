{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\billing\\billing.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\billing\\billing.tsx","mtime":1564131394069},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import './billing.scss';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, FormGroup, Label, Input, CustomInput, Row, Col, Progress, Container, Tooltip, Jumbotron } from 'reactstrap';\r\nimport { BillingModal } from './billing-modal';\r\nimport { createEntity, getSearch, resetFactureSearch } from 'app/entities/facture/facture.reducer';\r\nimport { handleRegister } from 'app/modules/account/register/register.reducer';\r\nexport class Billing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleToolTipMail = () => {\r\n            this.setState({\r\n                tooltipMailOpen: !this.state.tooltipMailOpen\r\n            });\r\n        };\r\n        this.toggleToolTipMdp = () => {\r\n            this.setState({\r\n                tooltipMdpOpen: !this.state.tooltipMdpOpen\r\n            });\r\n        };\r\n        this.toggleToolTipAuth = () => {\r\n            this.setState({\r\n                tooltipAuthOpen: !this.state.tooltipAuthOpen\r\n            });\r\n        };\r\n        this.handleChangeParticulier = () => {\r\n            if (this.state.particulier === false) {\r\n                this.setState({ particulier: true });\r\n            }\r\n            else {\r\n                this.setState({ particulier: false });\r\n            }\r\n        };\r\n        this.handleSearchOnBlur = e => {\r\n            this.props.getSearch({ raisonSociale: e.target.value });\r\n        };\r\n        this.handleConfTel = ({ target: { value } }) => {\r\n            value = value\r\n                // Remove all non-digits, turn initial 33 into nothing\r\n                .replace(/\\D+/, '')\r\n                .replace(/^330?/, '0')\r\n                // Stick to first 14, ignore later digits\r\n                .slice(0, 14)\r\n                // Add a space after any 2-digit group followed by more digits\r\n                .replace(/(\\d{2})(?=\\d)/g, '$1 ');\r\n            this.setState({ telephone: value });\r\n            this.setState({ confTel: true });\r\n        };\r\n        this.handleConfMail = () => {\r\n            if (this.state.mail !== this.state.mailconfirm) {\r\n                const errorMail = 'Les emails ne sont pas identiques';\r\n                this.setState({ errorMessagesMail: errorMail });\r\n            }\r\n            else {\r\n                const errorMail = null;\r\n                this.setState({ errorMessagesMail: errorMail });\r\n                this.setState({ confMail: true });\r\n            }\r\n        };\r\n        this.handleConfMdp = () => {\r\n            if (this.state.motDePasse !== this.state.mdpconfirm) {\r\n                const errorMdp = 'Les mots de passe ne sont pas identiques';\r\n                this.setState({ errorMessagesMdp: errorMdp });\r\n            }\r\n            else {\r\n                const errorMdp = null;\r\n                this.setState({ errorMessagesMdp: errorMdp });\r\n                this.setState({ motDePasseConf: true });\r\n            }\r\n        };\r\n        this.handleChangeState = field => event => {\r\n            this.setState({ [field]: event.target.value });\r\n        };\r\n        this.handleSubmit = () => {\r\n            if (this.state.confMail && this.state.confTel) {\r\n                const entity = {\r\n                    particulier: this.state.particulier,\r\n                    raisonSociale: this.state.raisonSociale,\r\n                    siret: this.state.siret,\r\n                    nom: this.state.nom,\r\n                    prenom: this.state.prenom,\r\n                    telephone: this.state.telephone,\r\n                    noVoie: this.state.noVoie,\r\n                    rue: this.state.rue,\r\n                    cp: this.state.cp,\r\n                    ville: this.state.ville,\r\n                    mail: this.state.mailconfirm,\r\n                    tva: this.state.tva,\r\n                    montant: this.state.montant,\r\n                    hash: this.props.match.params.id,\r\n                    loginUser: this.state.mailconfirm,\r\n                    mailUser: this.state.mailconfirm,\r\n                    passwordUser: this.state.mdpconfirm\r\n                };\r\n                this.props.createEntity(entity);\r\n                if (this.state.isSubmit === false) {\r\n                    this.setState({ isSubmit: true });\r\n                    //this.props.handleRegister(this.state.mailconfirm, this.state.mailconfirm, this.state.mdpconfirm,);\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        };\r\n        this._handleChooseResult = result => {\r\n            if (result) {\r\n                this.setState({ raisonSociale: result.denomination });\r\n                this.setState({ siret: result.siret });\r\n                this.setState({ noVoie: result.housenumber });\r\n                this.setState({ rue: result.street });\r\n                this.setState({ cp: result.codepostal });\r\n                this.setState({ ville: result.ville });\r\n            }\r\n            this.props.resetFactureSearch();\r\n        };\r\n        this._toggleChooseResultModal = () => {\r\n            this.props.resetFactureSearch();\r\n        };\r\n        this.state = {\r\n            particulier: false,\r\n            raisonSociale: '',\r\n            raisonSocialeTmp: '',\r\n            siret: '',\r\n            nom: '',\r\n            prenom: '',\r\n            telephone: '',\r\n            noVoie: '',\r\n            rue: '',\r\n            cp: '',\r\n            ville: '',\r\n            mail: '',\r\n            motDePasse: '',\r\n            montant: 0,\r\n            tva: 0,\r\n            hash: '',\r\n            tooltipMailOpen: false,\r\n            tooltipMdpOpen: false,\r\n            tooltipAuthOpen: false,\r\n            modal: false,\r\n            errorMessagesMail: '',\r\n            errorMessagesMdp: '',\r\n            mailconfirm: '',\r\n            mdpconfirm: '',\r\n            confMail: false,\r\n            confTel: false,\r\n            isSubmit: false,\r\n            motDePasseConf: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.state.particulier;\r\n        this.state.isSubmit;\r\n    }\r\n    render() {\r\n        return (React.createElement(Container, null,\r\n            React.createElement(\"div\", { className: \"text-container\" },\r\n                React.createElement(\"div\", { className: \"text-animation\" },\r\n                    React.createElement(\"span\", null, \"Votre facture\"))),\r\n            React.createElement(Jumbotron, null,\r\n                React.createElement(\"p\", { className: \"lead\" }, \"Pour \\u00E9diter une facture et l'envoyer sur votre adresse e-mail nous avons besoin des informations ci-dessous.\"),\r\n                React.createElement(\"hr\", { className: \"my-2\" }),\r\n                React.createElement(Form, null,\r\n                    React.createElement(FormGroup, null,\r\n                        React.createElement(Label, { for: \"exampleCheckbox\" }),\r\n                        React.createElement(\"div\", null,\r\n                            React.createElement(CustomInput, { type: \"switch\", id: \"particulier\", name: \"particulier\", size: \"lg\", label: \"Je suis un particulier\", onClick: this.handleChangeParticulier }))))),\r\n            React.createElement(\"form\", null,\r\n                React.createElement(\"div\", null, this.state.particulier ? (React.createElement(\"div\", null)) : (React.createElement(\"div\", null,\r\n                    React.createElement(FormGroup, { row: true },\r\n                        React.createElement(Col, { md: 3 }),\r\n                        React.createElement(Label, { md: 1 }, \"Raison sociale\"),\r\n                        React.createElement(Col, null,\r\n                            React.createElement(Input, { type: \"text\", name: \"raisonSociale\", onBlur: this.handleSearchOnBlur, onChange: this.handleChangeState('raisonSociale'), value: this.state.raisonSociale, md: 4, required: true })),\r\n                        React.createElement(BillingModal, { searchResult: this.props.search, chooseResult: this._handleChooseResult, toggle: this._toggleChooseResultModal }),\r\n                        React.createElement(Col, { md: 3 })),\r\n                    React.createElement(FormGroup, { row: true },\r\n                        React.createElement(Col, { md: 3 }),\r\n                        React.createElement(Label, { md: 1 }, \"N\\u00B0 de SIRET\"),\r\n                        React.createElement(Col, null,\r\n                            React.createElement(Input, { type: \"text\", name: \"siret\", md: 4, value: this.state.siret, onChange: this.handleChangeState('siret'), required: true })),\r\n                        React.createElement(Col, { md: 3 })),\r\n                    React.createElement(Row, null,\r\n                        React.createElement(Col, { md: 2 }),\r\n                        React.createElement(Col, null,\r\n                            React.createElement(Progress, { className: \"bar\", style: { height: '7px' } },\r\n                                React.createElement(Progress, { bar: true, value: \"100\" }))),\r\n                        React.createElement(Col, { md: 2 })),\r\n                    React.createElement(\"br\", null)))),\r\n                React.createElement(FormGroup, { row: true },\r\n                    React.createElement(Col, { md: 3 }),\r\n                    React.createElement(Label, { md: 1 }, \"Nom\"),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(Input, { type: \"text\", name: \"nom\", md: 4, required: true, value: this.state.nom, onChange: this.handleChangeState('nom') })),\r\n                    React.createElement(Col, { md: 3 })),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, { md: 3 }),\r\n                    React.createElement(Col, { md: 3 },\r\n                        React.createElement(FormGroup, null,\r\n                            React.createElement(Label, null, \"Pr\\u00E9nom\"),\r\n                            React.createElement(Input, { type: \"text\", name: \"prenom\", required: true, value: this.state.prenom, onChange: this.handleChangeState('prenom') }))),\r\n                    React.createElement(Col, { md: 3 },\r\n                        React.createElement(FormGroup, null,\r\n                            React.createElement(Label, null, \"T\\u00E9l\\u00E9phone\"),\r\n                            React.createElement(Input, { type: \"string\", name: \"telephone\", required: true, value: this.state.telephone, onBlur: this.handleConfTel, onChange: this.handleChangeState('telephone') }))),\r\n                    React.createElement(Col, { md: 3 })),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, { md: 3 }),\r\n                    React.createElement(Col, { md: 4 },\r\n                        React.createElement(FormGroup, null,\r\n                            React.createElement(Label, null, \"Rue\"),\r\n                            React.createElement(Input, { type: \"text\", name: \"rue\", value: this.state.rue, onChange: this.handleChangeState('rue'), required: true }))),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(FormGroup, null,\r\n                            React.createElement(Label, null, \"N\\u00B0 de voie\"),\r\n                            React.createElement(Input, { type: \"text\", name: \"noVoie\", value: this.state.noVoie, onChange: this.handleChangeState('noVoie'), required: true }))),\r\n                    React.createElement(Col, { md: 3 })),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, { md: 3 }),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(FormGroup, null,\r\n                            React.createElement(Label, null, \"Code postal\"),\r\n                            React.createElement(Input, { type: \"text\", name: \"cp\", value: this.state.cp, onChange: this.handleChangeState('cp'), required: true }))),\r\n                    React.createElement(Col, { md: 4 },\r\n                        React.createElement(FormGroup, null,\r\n                            React.createElement(Label, null, \"Ville\"),\r\n                            React.createElement(Input, { type: \"text\", name: \"ville\", value: this.state.ville, onChange: this.handleChangeState('ville'), required: true }))),\r\n                    React.createElement(Col, { md: 3 })),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, { md: 2 }),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(Progress, { className: \"bar\", style: { height: '7px' } },\r\n                            React.createElement(Progress, { bar: true, value: \"100\" }))),\r\n                    React.createElement(Col, { md: 2 })),\r\n                React.createElement(\"br\", null),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, null),\r\n                    React.createElement(\"h2\", null, \"Cr\\u00E9ation de votre compte\"),\r\n                    React.createElement(Col, null)),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, null,\r\n                        React.createElement(\"div\", null, this.state.mail !== this.state.mailconfirm ?\r\n                            React.createElement(\"h6\", null, this.state.errorMessagesMail)\r\n                            :\r\n                                React.createElement(\"h6\", null)))),\r\n                React.createElement(\"br\", null),\r\n                React.createElement(FormGroup, { row: true },\r\n                    React.createElement(Col, { md: 3 }),\r\n                    React.createElement(Label, { md: 2 }, \"E-Mail\"),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(Input, { type: \"text\", name: \"mail\", md: 4, required: true, value: this.state.mail, onChange: this.handleChangeState('mail') })),\r\n                    React.createElement(Col, { md: 3 })),\r\n                React.createElement(FormGroup, { row: true },\r\n                    React.createElement(Col, { md: 3 }),\r\n                    React.createElement(Label, { id: \"email\", md: 2 },\r\n                        React.createElement(\"span\", { style: { textDecoration: 'none', color: 'blue' } }, \"Confirmation E-Mail\")),\r\n                    React.createElement(Tooltip, { placement: \"left\", isOpen: this.state.tooltipMailOpen, target: \"email\", toggle: this.toggleToolTipMail }, \"Veuillez confirmer votre e-mail\"),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(Input, { type: \"email\", name: \"emailConf\", md: 4, required: true, value: this.state.mailconfirm, onBlur: this.handleConfMail, onChange: this.handleChangeState('mailconfirm') })),\r\n                    React.createElement(Col, { md: 3 })),\r\n                React.createElement(\"br\", null),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, null,\r\n                        React.createElement(\"div\", null, this.state.motDePasse !== this.state.mdpconfirm ?\r\n                            React.createElement(\"h6\", null, this.state.errorMessagesMdp)\r\n                            :\r\n                                React.createElement(\"h6\", null)))),\r\n                React.createElement(FormGroup, { row: true },\r\n                    React.createElement(Col, { md: 3 }),\r\n                    React.createElement(Label, { md: 2 }, \"Mot de passe\"),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(Input, { type: \"password\", name: \"motDePasse\", md: 4, required: true, value: this.state.motDePasse, onChange: this.handleChangeState('motDePasse') })),\r\n                    React.createElement(Col, { md: 3 })),\r\n                React.createElement(FormGroup, { row: true },\r\n                    React.createElement(Col, { md: 3 }),\r\n                    React.createElement(Label, { id: \"mdp\", md: 2 },\r\n                        React.createElement(\"span\", { style: { textDecoration: 'none', color: 'blue' } }, \"Confirmation du mot de passe\")),\r\n                    React.createElement(Tooltip, { placement: \"left\", isOpen: this.state.tooltipMdpOpen, target: \"mdp\", toggle: this.toggleToolTipMdp }, \"Veuillez confirmer votre mot de passe\"),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(Input, { type: \"password\", name: \"motDePasseConf\", md: 4, required: true, value: this.state.mdpconfirm, onBlur: this.handleConfMdp, onChange: this.handleChangeState('mdpconfirm') })),\r\n                    React.createElement(Col, { md: 3 })),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, null),\r\n                    this.state.isSubmit ?\r\n                        React.createElement(Col, null,\r\n                            React.createElement(\"h5\", null, \"Un mail d'authentification vient de vous \\u00EAtre envoy\\u00E9 \\u00E0 l'adresse suivante\"),\r\n                            React.createElement(\"h5\", { id: \"auth\" }, this.state.mailconfirm),\r\n                            React.createElement(Tooltip, { placement: \"left\", isOpen: this.state.tooltipAuthOpen, target: \"auth\", toggle: this.toggleToolTipAuth }, \"Si cette adresse email n'est pas la bonne, vous pouvez recr\\u00E9er un compte en mettant votre adresse mail puis en cliquant sur le bouton ci-dessous\"))\r\n                        :\r\n                            React.createElement(Col, null),\r\n                    React.createElement(\"br\", null),\r\n                    React.createElement(Col, null)),\r\n                React.createElement(\"br\", null),\r\n                React.createElement(Row, null,\r\n                    React.createElement(Col, null),\r\n                    React.createElement(Col, null,\r\n                        React.createElement(Button, { onClick: () => this.handleSubmit() }, \"Recevoir mes r\\u00E9sultats, ma facture et cr\\u00E9er mon compte\")),\r\n                    React.createElement(Col, null)),\r\n                React.createElement(\"br\", null))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ importFichier, facture }) => ({\r\n    importFichierEntity: importFichier.entity,\r\n    status: importFichier.status,\r\n    result: importFichier.result,\r\n    facture: facture.entity,\r\n    search: facture.searchResult,\r\n    pdfBase64: facture.pdfBase64\r\n});\r\nconst mapDispatchToProps = { getSearch, resetFactureSearch, createEntity, handleRegister };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Billing);\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\billing\\billing.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\billing\\billing.tsx"],"names":[],"mappings":"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","sourcesContent":["import './billing.scss';\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Form, FormGroup, Label, Input, CustomInput, Row, Col, Progress, Container, Tooltip, Jumbotron } from 'reactstrap';\r\nimport { BillingModal } from './billing-modal';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { createEntity, getSearch, resetFactureSearch } from 'app/entities/facture/facture.reducer';\r\nimport { IFacture } from 'app/shared/model/facture.model';\r\nimport { handleRegister } from 'app/modules/account/register/register.reducer';\r\n\r\nexport interface IBillingProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IBillingState {\r\n  particulier: boolean;\r\n  raisonSociale: string;\r\n  raisonSocialeTmp: string;\r\n  siret: string;\r\n  nom: string;\r\n  prenom: string;\r\n  telephone: string;\r\n  noVoie: string;\r\n  rue: string;\r\n  cp: string;\r\n  ville: string;\r\n  mail: string;\r\n  motDePasse: string;\r\n  montant: number;\r\n  tva : number;\r\n  hash:string;\r\n  tooltipMailOpen: boolean,\r\n  tooltipMdpOpen: boolean,\r\n  tooltipAuthOpen: boolean,\r\n  modal: boolean;\r\n  errorMessagesMail: string;\r\n  errorMessagesMdp: string;\r\n  mailconfirm: string,\r\n  mdpconfirm: string,\r\n  confMail: boolean;\r\n  confTel:boolean;\r\n  isSubmit:boolean;\r\n  motDePasseConf : boolean;\r\n}\r\n\r\nexport class Billing extends React.Component<IBillingProps, IBillingState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      particulier: false,\r\n      raisonSociale: '',\r\n      raisonSocialeTmp: '',\r\n      siret: '',\r\n      nom: '',\r\n      prenom: '',\r\n      telephone: '',\r\n      noVoie: '',\r\n      rue: '',\r\n      cp: '',\r\n      ville: '',\r\n      mail: '',\r\n      motDePasse: '',\r\n      montant: 0,\r\n      tva : 0,\r\n      hash:'',\r\n      tooltipMailOpen: false,\r\n      tooltipMdpOpen: false,\r\n      tooltipAuthOpen: false,\r\n      modal: false,\r\n      errorMessagesMail: '',\r\n      errorMessagesMdp:'',\r\n      mailconfirm: '',\r\n      mdpconfirm: '',\r\n      confMail: false,\r\n      confTel:false,\r\n      isSubmit:false,\r\n      motDePasseConf: false\r\n    };\r\n  }\r\n\r\n  toggleToolTipMail = () => {\r\n    this.setState({\r\n      tooltipMailOpen: !this.state.tooltipMailOpen\r\n    });\r\n  };\r\n  toggleToolTipMdp = () => {\r\n    this.setState({\r\n      tooltipMdpOpen: !this.state.tooltipMdpOpen\r\n    });\r\n  };\r\n  toggleToolTipAuth = () => {\r\n    this.setState({\r\n      tooltipAuthOpen: !this.state.tooltipAuthOpen\r\n    });\r\n  };\r\n\r\n  handleChangeParticulier = () => {\r\n    if (this.state.particulier === false) {\r\n      this.setState({ particulier: true });\r\n    } else {\r\n      this.setState({ particulier: false });\r\n    }\r\n  };\r\n\r\n  handleSearchOnBlur = e => {\r\n    this.props.getSearch({ raisonSociale: e.target.value });\r\n  };\r\n\r\n  handleConfTel = ({ target: { value } }) => {\r\n    value = value\r\n      // Remove all non-digits, turn initial 33 into nothing\r\n      .replace(/\\D+/, '')\r\n      .replace(/^330?/, '0')\r\n      // Stick to first 14, ignore later digits\r\n      .slice(0, 14)\r\n      // Add a space after any 2-digit group followed by more digits\r\n      .replace(/(\\d{2})(?=\\d)/g, '$1 ')\r\n    this.setState({ telephone : value });\r\n    this.setState({ confTel : true });\r\n  }\r\n\r\n  handleConfMail = () => {\r\n    if(this.state.mail !== this.state.mailconfirm){\r\n      const errorMail = 'Les emails ne sont pas identiques';\r\n      this.setState({errorMessagesMail : errorMail});\r\n    }\r\n    else{\r\n      const errorMail = null;\r\n      this.setState({errorMessagesMail : errorMail});\r\n      this.setState({confMail : true });\r\n    } \r\n  }\r\n\r\n  handleConfMdp = () => {\r\n    if(this.state.motDePasse !== this.state.mdpconfirm){\r\n      const errorMdp = 'Les mots de passe ne sont pas identiques';\r\n      this.setState({ errorMessagesMdp : errorMdp });\r\n    }\r\n    else{\r\n      const errorMdp = null;\r\n      this.setState({ errorMessagesMdp : errorMdp });\r\n      this.setState({ motDePasseConf : true });\r\n    } \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.state.particulier;\r\n    this.state.isSubmit\r\n  }\r\n\r\n  handleChangeState = field => event => {\r\n    this.setState({ [field]: event.target.value });\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if(this.state.confMail && this.state.confTel){\r\n\r\n      const entity : IFacture = {\r\n        particulier: this.state.particulier,\r\n        raisonSociale: this.state.raisonSociale,\r\n        siret: this.state.siret,\r\n        nom: this.state.nom,\r\n        prenom: this.state.prenom,\r\n        telephone: this.state.telephone,\r\n        noVoie: this.state.noVoie,\r\n        rue: this.state.rue,\r\n        cp: this.state.cp,\r\n        ville: this.state.ville,\r\n        mail: this.state.mailconfirm,\r\n        tva: this.state.tva,\r\n        montant: this.state.montant,\r\n        hash: this.props.match.params.id,\r\n        loginUser : this.state.mailconfirm,\r\n        mailUser : this.state.mailconfirm,\r\n        passwordUser : this.state.mdpconfirm\r\n\r\n      }\r\n      this.props.createEntity(entity);\r\n      if (this.state.isSubmit === false) {\r\n        this.setState({ isSubmit: true });\r\n        //this.props.handleRegister(this.state.mailconfirm, this.state.mailconfirm, this.state.mdpconfirm,);\r\n      } else {\r\n       \r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  _handleChooseResult = result => {\r\n    if (result) {\r\n      this.setState({ raisonSociale: result.denomination });\r\n      this.setState({ siret: result.siret });\r\n      this.setState({ noVoie: result.housenumber });\r\n      this.setState({ rue: result.street });\r\n      this.setState({ cp: result.codepostal });\r\n      this.setState({ ville: result.ville });\r\n    }\r\n    this.props.resetFactureSearch();\r\n  };\r\n\r\n  _toggleChooseResultModal = () => {\r\n    this.props.resetFactureSearch();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div className=\"text-container\">\r\n          <div className=\"text-animation\">\r\n            <span>Votre facture</span>\r\n          </div>\r\n        </div>\r\n            <Jumbotron>\r\n            <p className=\"lead\">\r\n              Pour éditer une facture et l'envoyer sur votre adresse e-mail nous avons besoin des informations ci-dessous.\r\n            </p>\r\n            <hr className=\"my-2\" />\r\n          <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleCheckbox\" />\r\n                <div>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"particulier\"\r\n                    name=\"particulier\"\r\n                    size=\"lg\"\r\n                    label=\"Je suis un particulier\"\r\n                    onClick={this.handleChangeParticulier}\r\n                  />\r\n                </div>\r\n              </FormGroup>\r\n           </Form>\r\n          </Jumbotron>\r\n          <form>\r\n            <div>\r\n              {this.state.particulier ? (\r\n                <div />\r\n              ) : (\r\n                <div>\r\n                  <FormGroup row>\r\n                    <Col md={3} />\r\n                    <Label md={1}>Raison sociale</Label>\r\n                    <Col>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"raisonSociale\"\r\n                        onBlur={this.handleSearchOnBlur}\r\n                        onChange={this.handleChangeState('raisonSociale')}\r\n                        value={this.state.raisonSociale}\r\n                        md={4}\r\n                        required\r\n                      />\r\n                    </Col>\r\n                    <BillingModal\r\n                      searchResult={this.props.search}\r\n                      chooseResult={this._handleChooseResult}\r\n                      toggle={this._toggleChooseResultModal}\r\n                    />\r\n                    <Col md={3} />\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md={3} />\r\n                    <Label md={1}>N° de SIRET</Label>\r\n                    <Col>\r\n                      <Input type=\"text\" name=\"siret\" md={4} value={this.state.siret} onChange={this.handleChangeState('siret')} required />\r\n                    </Col>\r\n                    <Col md={3} />\r\n                  </FormGroup>\r\n                  <Row>\r\n                    <Col md={2} />\r\n                    <Col>\r\n                      <Progress className=\"bar\" style={{ height: '7px' }}>\r\n                        <Progress bar value=\"100\" />\r\n                      </Progress>\r\n                    </Col>\r\n                    <Col md={2} />\r\n                  </Row>\r\n                  <br />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <FormGroup row>\r\n              <Col md={3} />\r\n                <Label md={1}>Nom</Label>\r\n              <Col>\r\n                <Input type=\"text\" name=\"nom\" md={4} required value={this.state.nom} onChange={this.handleChangeState('nom')} />\r\n              </Col>\r\n              <Col md={3} />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md={3} />\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Prénom</Label>\r\n                  <Input type=\"text\" name=\"prenom\" required value={this.state.prenom} onChange={this.handleChangeState('prenom')} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Téléphone</Label>\r\n                  <Input type=\"string\" \r\n                         name=\"telephone\"  \r\n                         required \r\n                         value={this.state.telephone} \r\n                         onBlur={this.handleConfTel} \r\n                         onChange={this.handleChangeState('telephone')} \r\n                         />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3} />\r\n            </Row>\r\n            <Row>\r\n              <Col md={3} />\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Rue</Label>\r\n                  <Input type=\"text\" name=\"rue\" value={this.state.rue} onChange={this.handleChangeState('rue')} required />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>N° de voie</Label>\r\n                  <Input type=\"text\" name=\"noVoie\" value={this.state.noVoie} onChange={this.handleChangeState('noVoie')} required />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3} />\r\n            </Row>\r\n            <Row>\r\n              <Col md={3} />\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Code postal</Label>\r\n                  <Input type=\"text\" name=\"cp\" value={this.state.cp} onChange={this.handleChangeState('cp')} required />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Ville</Label>\r\n                  <Input type=\"text\" name=\"ville\" value={this.state.ville} onChange={this.handleChangeState('ville')} required />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3} />\r\n            </Row>\r\n            <Row>\r\n              <Col md={2} />\r\n              <Col>\r\n                <Progress className=\"bar\" style={{ height: '7px' }}>\r\n                  <Progress bar value=\"100\" />\r\n                </Progress>\r\n              </Col>\r\n              <Col md={2} />\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col></Col>\r\n                <h2>Création de votre compte</h2>\r\n              <Col></Col>\r\n            </Row>   \r\n            <Row>\r\n              <Col>\r\n                <div>\r\n                  {this.state.mail !== this.state.mailconfirm ?                \r\n                    <h6>{this.state.errorMessagesMail}</h6>\r\n                  :\r\n                    <h6></h6>\r\n                  }\r\n                </div>\r\n              </Col> \r\n            </Row>\r\n            <br />\r\n            <FormGroup row>\r\n              <Col md={3} />\r\n              <Label md={2}>E-Mail</Label>\r\n              <Col>\r\n                <Input type=\"text\" name=\"mail\" md={4} required value={this.state.mail} onChange={this.handleChangeState('mail')}/>\r\n              </Col>\r\n              <Col md={3} />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Col md={3} />\r\n              <Label id=\"email\" md={2}>\r\n                <span style={{ textDecoration: 'none', color: 'blue' }}>Confirmation E-Mail</span>\r\n              </Label>\r\n              <Tooltip placement=\"left\" isOpen={this.state.tooltipMailOpen} target=\"email\" toggle={this.toggleToolTipMail}>\r\n                Veuillez confirmer votre e-mail\r\n              </Tooltip>\r\n              <Col>\r\n                <Input type=\"email\" name=\"emailConf\" md={4} required value={this.state.mailconfirm} onBlur={this.handleConfMail} onChange={this.handleChangeState('mailconfirm')}/>\r\n              </Col>\r\n              <Col md={3} />\r\n            </FormGroup>\r\n            <br />\r\n            <Row>\r\n              <Col>\r\n                <div>\r\n                {this.state.motDePasse !== this.state.mdpconfirm ? \r\n                  <h6>{this.state.errorMessagesMdp}</h6>\r\n                :\r\n                  <h6></h6>\r\n                }\r\n                </div>\r\n              </Col> \r\n            </Row>\r\n            <FormGroup row>\r\n              <Col md={3} />\r\n              <Label md={2}>Mot de passe</Label>\r\n              <Col>\r\n                <Input type=\"password\" name=\"motDePasse\" md={4} required value={this.state.motDePasse} onChange={this.handleChangeState('motDePasse')}/>\r\n              </Col>\r\n              <Col md={3} />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Col md={3} />\r\n              <Label id=\"mdp\" md={2}>\r\n                <span style={{ textDecoration: 'none', color: 'blue' }}>Confirmation du mot de passe</span>\r\n              </Label>\r\n              <Tooltip placement=\"left\" isOpen={this.state.tooltipMdpOpen} target=\"mdp\" toggle={this.toggleToolTipMdp}>\r\n                Veuillez confirmer votre mot de passe\r\n              </Tooltip>\r\n              <Col>\r\n                <Input type=\"password\" name=\"motDePasseConf\" md={4} required value={this.state.mdpconfirm} onBlur={this.handleConfMdp} onChange={this.handleChangeState('mdpconfirm')}/>\r\n              </Col>\r\n              <Col md={3} />\r\n            </FormGroup>\r\n            <Row>\r\n            <Col/>\r\n            {this.state.isSubmit ? \r\n              <Col>\r\n                <h5>Un mail d'authentification vient de vous être envoyé à l'adresse suivante</h5>\r\n                <h5 id=\"auth\">{this.state.mailconfirm}</h5>\r\n                <Tooltip placement=\"left\" isOpen={this.state.tooltipAuthOpen} target=\"auth\" toggle={this.toggleToolTipAuth}>\r\n                  Si cette adresse email n'est pas la bonne, vous pouvez recréer un compte en mettant votre adresse mail puis en cliquant sur le bouton ci-dessous\r\n                </Tooltip>\r\n              </Col>\r\n            :\r\n              <Col></Col>\r\n            }\r\n            <br/>\r\n            <Col/>\r\n            </Row>\r\n            <br/>  \r\n            <Row> \r\n              <Col/>\r\n              <Col>\r\n                <Button onClick={() => this.handleSubmit()}>Recevoir mes résultats, ma facture et créer mon compte</Button>\r\n              </Col>  \r\n              <Col/>\r\n            </Row>\r\n            <br/>\r\n          </form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ importFichier, facture }: IRootState) => ({\r\n  importFichierEntity: importFichier.entity,\r\n  status: importFichier.status,\r\n  result: importFichier.result,\r\n  facture: facture.entity,\r\n  search: facture.searchResult,\r\n  pdfBase64 : facture.pdfBase64\r\n\r\n});\r\n\r\nconst mapDispatchToProps = { getSearch, resetFactureSearch, createEntity, handleRegister };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Billing);\r\n"]}]}