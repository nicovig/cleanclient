{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management.reducer.ts","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management.reducer.ts","mtime":1560254031157},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { defaultValue } from 'app/shared/model/user.model';\r\nexport const ACTION_TYPES = {\r\n    FETCH_ROLES: 'userManagement/FETCH_ROLES',\r\n    FETCH_USERS: 'userManagement/FETCH_USERS',\r\n    FETCH_USER: 'userManagement/FETCH_USER',\r\n    CREATE_USER: 'userManagement/CREATE_USER',\r\n    UPDATE_USER: 'userManagement/UPDATE_USER',\r\n    DELETE_USER: 'userManagement/DELETE_USER',\r\n    RESET: 'userManagement/RESET'\r\n};\r\nconst initialState = {\r\n    loading: false,\r\n    errorMessage: null,\r\n    users: [],\r\n    authorities: [],\r\n    user: defaultValue,\r\n    updating: false,\r\n    updateSuccess: false,\r\n    totalItems: 0\r\n};\r\n// Reducer\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.FETCH_ROLES):\r\n            return Object.assign({}, state);\r\n        case REQUEST(ACTION_TYPES.FETCH_USERS):\r\n        case REQUEST(ACTION_TYPES.FETCH_USER):\r\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, loading: true });\r\n        case REQUEST(ACTION_TYPES.CREATE_USER):\r\n        case REQUEST(ACTION_TYPES.UPDATE_USER):\r\n        case REQUEST(ACTION_TYPES.DELETE_USER):\r\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, updating: true });\r\n        case FAILURE(ACTION_TYPES.FETCH_USERS):\r\n        case FAILURE(ACTION_TYPES.FETCH_USER):\r\n        case FAILURE(ACTION_TYPES.FETCH_ROLES):\r\n        case FAILURE(ACTION_TYPES.CREATE_USER):\r\n        case FAILURE(ACTION_TYPES.UPDATE_USER):\r\n        case FAILURE(ACTION_TYPES.DELETE_USER):\r\n            return Object.assign({}, state, { loading: false, updating: false, updateSuccess: false, errorMessage: action.payload });\r\n        case SUCCESS(ACTION_TYPES.FETCH_ROLES):\r\n            return Object.assign({}, state, { authorities: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.FETCH_USERS):\r\n            return Object.assign({}, state, { loading: false, users: action.payload.data, totalItems: action.payload.headers['x-total-count'] });\r\n        case SUCCESS(ACTION_TYPES.FETCH_USER):\r\n            return Object.assign({}, state, { loading: false, user: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.CREATE_USER):\r\n        case SUCCESS(ACTION_TYPES.UPDATE_USER):\r\n            return Object.assign({}, state, { updating: false, updateSuccess: true, user: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.DELETE_USER):\r\n            return Object.assign({}, state, { updating: false, updateSuccess: true, user: defaultValue });\r\n        case ACTION_TYPES.RESET:\r\n            return Object.assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst apiUrl = 'api/users';\r\n// Actions\r\nexport const getUsers = (page, size, sort) => {\r\n    const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_USERS,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\nexport const getRoles = () => ({\r\n    type: ACTION_TYPES.FETCH_ROLES,\r\n    payload: axios.get(`${apiUrl}/authorities`)\r\n});\r\nexport const getUser = id => {\r\n    const requestUrl = `${apiUrl}/${id}`;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_USER,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\nexport const createUser = user => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.CREATE_USER,\r\n        payload: axios.post(apiUrl, user)\r\n    });\r\n    dispatch(getUsers());\r\n    return result;\r\n});\r\nexport const updateUser = user => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.UPDATE_USER,\r\n        payload: axios.put(apiUrl, user)\r\n    });\r\n    dispatch(getUsers());\r\n    return result;\r\n});\r\nexport const deleteUser = id => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const requestUrl = `${apiUrl}/${id}`;\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.DELETE_USER,\r\n        payload: axios.delete(requestUrl)\r\n    });\r\n    dispatch(getUsers());\r\n    return result;\r\n});\r\nexport const reset = () => ({\r\n    type: ACTION_TYPES.RESET\r\n});\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management.reducer.ts","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management.reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nimport { IUser, defaultValue } from 'app/shared/model/user.model';\n\nexport const ACTION_TYPES = {\n  FETCH_ROLES: 'userManagement/FETCH_ROLES',\n  FETCH_USERS: 'userManagement/FETCH_USERS',\n  FETCH_USER: 'userManagement/FETCH_USER',\n  CREATE_USER: 'userManagement/CREATE_USER',\n  UPDATE_USER: 'userManagement/UPDATE_USER',\n  DELETE_USER: 'userManagement/DELETE_USER',\n  RESET: 'userManagement/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  users: [] as ReadonlyArray<IUser>,\n  authorities: [] as any[],\n  user: defaultValue,\n  updating: false,\n  updateSuccess: false,\n  totalItems: 0\n};\n\nexport type UserManagementState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: UserManagementState = initialState, action): UserManagementState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_ROLES):\n      return {\n        ...state\n      };\n    case REQUEST(ACTION_TYPES.FETCH_USERS):\n    case REQUEST(ACTION_TYPES.FETCH_USER):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_USER):\n    case REQUEST(ACTION_TYPES.UPDATE_USER):\n    case REQUEST(ACTION_TYPES.DELETE_USER):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_USERS):\n    case FAILURE(ACTION_TYPES.FETCH_USER):\n    case FAILURE(ACTION_TYPES.FETCH_ROLES):\n    case FAILURE(ACTION_TYPES.CREATE_USER):\n    case FAILURE(ACTION_TYPES.UPDATE_USER):\n    case FAILURE(ACTION_TYPES.DELETE_USER):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_ROLES):\n      return {\n        ...state,\n        authorities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_USERS):\n      return {\n        ...state,\n        loading: false,\n        users: action.payload.data,\n        totalItems: action.payload.headers['x-total-count']\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_USER):\n      return {\n        ...state,\n        loading: false,\n        user: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_USER):\n    case SUCCESS(ACTION_TYPES.UPDATE_USER):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        user: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_USER):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        user: defaultValue\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/users';\n// Actions\nexport const getUsers: ICrudGetAllAction<IUser> = (page, size, sort) => {\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n  return {\n    type: ACTION_TYPES.FETCH_USERS,\n    payload: axios.get<IUser>(requestUrl)\n  };\n};\n\nexport const getRoles = () => ({\n  type: ACTION_TYPES.FETCH_ROLES,\n  payload: axios.get(`${apiUrl}/authorities`)\n});\n\nexport const getUser: ICrudGetAction<IUser> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_USER,\n    payload: axios.get<IUser>(requestUrl)\n  };\n};\n\nexport const createUser: ICrudPutAction<IUser> = user => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_USER,\n    payload: axios.post(apiUrl, user)\n  });\n  dispatch(getUsers());\n  return result;\n};\n\nexport const updateUser: ICrudPutAction<IUser> = user => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_USER,\n    payload: axios.put(apiUrl, user)\n  });\n  dispatch(getUsers());\n  return result;\n};\n\nexport const deleteUser: ICrudDeleteAction<IUser> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_USER,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getUsers());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}