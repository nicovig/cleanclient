{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-ligne\\import-ligne-detail.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-ligne\\import-ligne-detail.tsx","mtime":1563530778228},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './import-ligne.reducer';\r\nexport class ImportLigneDetail extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    }\r\n    render() {\r\n        const { importLigneEntity } = this.props;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.detail.title\" }, \"ImportLigne\"),\r\n                    \" [\",\r\n                    React.createElement(\"b\", null, importLigneEntity.id),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"statut\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.statut\" }, \"Statut\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.statut),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"matchingMethod\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.matchingMethod\" }, \"Matching Method\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.matchingMethod),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"idExterne\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.idExterne\" }, \"Id Externe\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.idExterne),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"nom\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.nom\" }, \"Nom\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.nom),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"adresse\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.adresse\" }, \"Adresse\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.adresse),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"cp\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.cp\" }, \"Cp\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.cp),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"ville\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.ville\" }, \"Ville\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.ville),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"siret\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.siret\" }, \"Siret\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.siret),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"geolocScore\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.geolocScore\" }, \"Geoloc Score\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.geolocScore),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"geolocLabel\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.geolocLabel\" }, \"Geoloc Label\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.geolocLabel),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"geolocHousenumber\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.geolocHousenumber\" }, \"Geoloc Housenumber\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.geolocHousenumber),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"geolocStreet\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.geolocStreet\" }, \"Geoloc Street\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.geolocStreet),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"geolocPostcode\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.geolocPostcode\" }, \"Geoloc Postcode\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.geolocPostcode),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"geolocCity\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.geolocCity\" }, \"Geoloc City\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.geolocCity),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"geolocLatitude\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.geolocLatitude\" }, \"Geoloc Latitude\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.geolocLatitude),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"geolocLongitude\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.geolocLongitude\" }, \"Geoloc Longitude\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.geolocLongitude),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneSiret\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneSiret\" }, \"Sirene Siret\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneSiret),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneDenomination\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneDenomination\" }, \"Sirene Denomination\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneDenomination),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneHousenumber\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneHousenumber\" }, \"Sirene Housenumber\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneHousenumber),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneStreet\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneStreet\" }, \"Sirene Street\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneStreet),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneCodepostal\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneCodepostal\" }, \"Sirene Codepostal\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneCodepostal),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneVille\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneVille\" }, \"Sirene Ville\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneVille),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneLatitude\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneLatitude\" }, \"Sirene Latitude\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneLatitude),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneLongitude\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneLongitude\" }, \"Sirene Longitude\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneLongitude),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneEtatadministratif\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneEtatadministratif\" }, \"Sirene Etatadministratif\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneEtatadministratif),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneNomenclature\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneNomenclature\" }, \"Sirene Nomenclature\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneNomenclature),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"sireneTrancheeffectif\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.sireneTrancheeffectif\" }, \"Sirene Trancheeffectif\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.sireneTrancheeffectif),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"elasticScore\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.elasticScore\" }, \"Elastic Score\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.elasticScore),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.importFichier\" }, \"Import Fichier\")),\r\n                    React.createElement(\"dd\", null, importLigneEntity.importFichier ? importLigneEntity.importFichier.id : '')),\r\n                React.createElement(Button, { tag: Link, to: \"/entity/import-ligne\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: `/entity/import-ligne/${importLigneEntity.id}/edit`, replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ importLigne }) => ({\r\n    importLigneEntity: importLigne.entity\r\n});\r\nconst mapDispatchToProps = { getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportLigneDetail);\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-ligne\\import-ligne-detail.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-ligne\\import-ligne-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './import-ligne.reducer';\r\nimport { IImportLigne } from 'app/shared/model/import-ligne.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IImportLigneDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ImportLigneDetail extends React.Component<IImportLigneDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { importLigneEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"cleanclientApp.importLigne.detail.title\">ImportLigne</Translate> [<b>{importLigneEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"statut\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.statut\">Statut</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.statut}</dd>\r\n            <dt>\r\n              <span id=\"matchingMethod\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.matchingMethod\">Matching Method</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.matchingMethod}</dd>\r\n            <dt>\r\n              <span id=\"idExterne\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.idExterne\">Id Externe</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.idExterne}</dd>\r\n            <dt>\r\n              <span id=\"nom\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.nom\">Nom</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.nom}</dd>\r\n            <dt>\r\n              <span id=\"adresse\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.adresse\">Adresse</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.adresse}</dd>\r\n            <dt>\r\n              <span id=\"cp\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.cp\">Cp</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.cp}</dd>\r\n            <dt>\r\n              <span id=\"ville\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.ville\">Ville</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.ville}</dd>\r\n            <dt>\r\n              <span id=\"siret\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.siret\">Siret</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.siret}</dd>\r\n            <dt>\r\n              <span id=\"geolocScore\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.geolocScore\">Geoloc Score</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.geolocScore}</dd>\r\n            <dt>\r\n              <span id=\"geolocLabel\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.geolocLabel\">Geoloc Label</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.geolocLabel}</dd>\r\n            <dt>\r\n              <span id=\"geolocHousenumber\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.geolocHousenumber\">Geoloc Housenumber</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.geolocHousenumber}</dd>\r\n            <dt>\r\n              <span id=\"geolocStreet\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.geolocStreet\">Geoloc Street</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.geolocStreet}</dd>\r\n            <dt>\r\n              <span id=\"geolocPostcode\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.geolocPostcode\">Geoloc Postcode</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.geolocPostcode}</dd>\r\n            <dt>\r\n              <span id=\"geolocCity\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.geolocCity\">Geoloc City</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.geolocCity}</dd>\r\n            <dt>\r\n              <span id=\"geolocLatitude\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.geolocLatitude\">Geoloc Latitude</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.geolocLatitude}</dd>\r\n            <dt>\r\n              <span id=\"geolocLongitude\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.geolocLongitude\">Geoloc Longitude</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.geolocLongitude}</dd>\r\n            <dt>\r\n              <span id=\"sireneSiret\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneSiret\">Sirene Siret</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneSiret}</dd>\r\n            <dt>\r\n              <span id=\"sireneDenomination\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneDenomination\">Sirene Denomination</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneDenomination}</dd>\r\n            <dt>\r\n              <span id=\"sireneHousenumber\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneHousenumber\">Sirene Housenumber</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneHousenumber}</dd>\r\n            <dt>\r\n              <span id=\"sireneStreet\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneStreet\">Sirene Street</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneStreet}</dd>\r\n            <dt>\r\n              <span id=\"sireneCodepostal\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneCodepostal\">Sirene Codepostal</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneCodepostal}</dd>\r\n            <dt>\r\n              <span id=\"sireneVille\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneVille\">Sirene Ville</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneVille}</dd>\r\n            <dt>\r\n              <span id=\"sireneLatitude\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneLatitude\">Sirene Latitude</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneLatitude}</dd>\r\n            <dt>\r\n              <span id=\"sireneLongitude\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneLongitude\">Sirene Longitude</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneLongitude}</dd>\r\n            <dt>\r\n              <span id=\"sireneEtatadministratif\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneEtatadministratif\">Sirene Etatadministratif</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneEtatadministratif}</dd>\r\n            <dt>\r\n              <span id=\"sireneNomenclature\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneNomenclature\">Sirene Nomenclature</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneNomenclature}</dd>\r\n            <dt>\r\n              <span id=\"sireneTrancheeffectif\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.sireneTrancheeffectif\">Sirene Trancheeffectif</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.sireneTrancheeffectif}</dd>\r\n            <dt>\r\n              <span id=\"elasticScore\">\r\n                <Translate contentKey=\"cleanclientApp.importLigne.elasticScore\">Elastic Score</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{importLigneEntity.elasticScore}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"cleanclientApp.importLigne.importFichier\">Import Fichier</Translate>\r\n            </dt>\r\n            <dd>{importLigneEntity.importFichier ? importLigneEntity.importFichier.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/import-ligne\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/import-ligne/${importLigneEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ importLigne }: IRootState) => ({\r\n  importLigneEntity: importLigne.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ImportLigneDetail);\r\n"]}]}