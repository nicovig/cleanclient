{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\upload\\upload-model-download.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\upload\\upload-model-download.tsx","mtime":1560524100271},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport XLSX from 'xlsx';\r\nimport { UPLOAD_MODELE } from './upload-constants';\r\nexport class UploadModelDownload extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() { }\r\n    _downloadUploadModel() {\r\n        const data = UPLOAD_MODELE;\r\n        const wsAssets = XLSX.utils.json_to_sheet(data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, wsAssets, 'Clients');\r\n        const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'Modèle Clients.xlsx');\r\n    }\r\n    render() {\r\n        return React.createElement(\"a\", { onClick: this._downloadUploadModel }, ' Cliquez ici pour un modèle');\r\n    }\r\n}\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\upload\\upload-model-download.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\upload\\upload-model-download.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AACpC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAEnD,MAAM,OAAO,mBAAoB,SAAQ,KAAK,CAAC,SAAS;IACtD,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAED,iBAAiB,KAAI,CAAC;IAEtB,oBAAoB;QAClB,MAAM,IAAI,GAAG,aAAa,CAAC;QAE3B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEhD,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QAEtD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAElE,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,EAAE,qBAAqB,CAAC,CAAC;IACzF,CAAC;IAED,MAAM;QACJ,OAAO,2BAAG,OAAO,EAAE,IAAI,CAAC,oBAAoB,IAAG,6BAA6B,CAAK,CAAC;IACpF,CAAC;CACF","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Modal, Button, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { saveAs } from 'file-saver';\r\nimport XLSX from 'xlsx';\r\nimport { UPLOAD_MODELE } from './upload-constants';\r\n\r\nexport class UploadModelDownload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  _downloadUploadModel() {\r\n    const data = UPLOAD_MODELE;\r\n\r\n    const wsAssets = XLSX.utils.json_to_sheet(data);\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, wsAssets, 'Clients');\r\n\r\n    const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n\r\n    saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'Modèle Clients.xlsx');\r\n  }\r\n\r\n  render() {\r\n    return <a onClick={this._downloadUploadModel}>{' Cliquez ici pour un modèle'}</a>;\r\n  }\r\n}\r\n"]}]}