{"remainingRequest":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-fichier\\import-fichier.reducer.ts","dependencies":[{"path":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-fichier\\import-fichier.reducer.ts","mtime":1560870148708},{"path":"c:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { defaultValue } from 'app/shared/model/import-fichier.model';\r\nexport const ACTION_TYPES = {\r\n    FETCH_IMPORTFICHIER_LIST: 'importFichier/FETCH_IMPORTFICHIER_LIST',\r\n    FETCH_IMPORTFICHIER: 'importFichier/FETCH_IMPORTFICHIER',\r\n    FETCH_IMPORTFICHIER_STATUS: 'importFichier/STATUS',\r\n    CREATE_IMPORTFICHIER: 'importFichier/CREATE_IMPORTFICHIER',\r\n    UPDATE_IMPORTFICHIER: 'importFichier/UPDATE_IMPORTFICHIER',\r\n    DELETE_IMPORTFICHIER: 'importFichier/DELETE_IMPORTFICHIER',\r\n    RESET: 'importFichier/RESET'\r\n};\r\nconst initialState = {\r\n    loading: false,\r\n    errorMessage: null,\r\n    entities: [],\r\n    entity: defaultValue,\r\n    updating: false,\r\n    updateSuccess: false,\r\n    status: {\r\n        nbClientsTotal: 0,\r\n        nbClientsTraites: 0,\r\n        nbClientsTrouves: 0,\r\n        nbClientsAConfirmer: 0,\r\n        nbClientEchec: 0,\r\n        nbProspects: 0\r\n    }\r\n};\r\n// Reducer\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.FETCH_IMPORTFICHIER_LIST):\r\n        case REQUEST(ACTION_TYPES.FETCH_IMPORTFICHIER):\r\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, loading: true });\r\n        case REQUEST(ACTION_TYPES.CREATE_IMPORTFICHIER):\r\n        case REQUEST(ACTION_TYPES.UPDATE_IMPORTFICHIER):\r\n        case REQUEST(ACTION_TYPES.DELETE_IMPORTFICHIER):\r\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, updating: true });\r\n        case FAILURE(ACTION_TYPES.FETCH_IMPORTFICHIER_LIST):\r\n        case FAILURE(ACTION_TYPES.FETCH_IMPORTFICHIER):\r\n        case FAILURE(ACTION_TYPES.CREATE_IMPORTFICHIER):\r\n        case FAILURE(ACTION_TYPES.UPDATE_IMPORTFICHIER):\r\n        case FAILURE(ACTION_TYPES.DELETE_IMPORTFICHIER):\r\n            return Object.assign({}, state, { loading: false, updating: false, updateSuccess: false, errorMessage: action.payload });\r\n        case SUCCESS(ACTION_TYPES.FETCH_IMPORTFICHIER_LIST):\r\n            return Object.assign({}, state, { loading: false, entities: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.FETCH_IMPORTFICHIER_STATUS):\r\n            return Object.assign({}, state, { loading: false, status: action.payload });\r\n        case SUCCESS(ACTION_TYPES.FETCH_IMPORTFICHIER):\r\n            return Object.assign({}, state, { loading: false, entity: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.CREATE_IMPORTFICHIER):\r\n        case SUCCESS(ACTION_TYPES.UPDATE_IMPORTFICHIER):\r\n            return Object.assign({}, state, { updating: false, updateSuccess: true, entity: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.DELETE_IMPORTFICHIER):\r\n            return Object.assign({}, state, { updating: false, updateSuccess: true, entity: {} });\r\n        case ACTION_TYPES.RESET:\r\n            return Object.assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst apiUrl = 'api/import-fichiers';\r\n// Actions\r\nexport const getEntities = (page, size, sort) => ({\r\n    type: ACTION_TYPES.FETCH_IMPORTFICHIER_LIST,\r\n    payload: axios.get(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\nexport const getEntity = id => {\r\n    const requestUrl = `${apiUrl}/${id}`;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_IMPORTFICHIER,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\nexport const getEntityStatus = id => {\r\n    const requestUrl = `${apiUrl}/${id}/status`;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_IMPORTFICHIER,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\nexport const createEntity = entity => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.CREATE_IMPORTFICHIER,\r\n        payload: axios.post(apiUrl, cleanEntity(entity))\r\n    });\r\n    dispatch(getEntities());\r\n    return result;\r\n});\r\nexport const updateEntity = entity => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.UPDATE_IMPORTFICHIER,\r\n        payload: axios.put(apiUrl, cleanEntity(entity))\r\n    });\r\n    dispatch(getEntities());\r\n    return result;\r\n});\r\nexport const deleteEntity = id => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n    const requestUrl = `${apiUrl}/${id}`;\r\n    const result = yield dispatch({\r\n        type: ACTION_TYPES.DELETE_IMPORTFICHIER,\r\n        payload: axios.delete(requestUrl)\r\n    });\r\n    dispatch(getEntities());\r\n    return result;\r\n});\r\nexport const reset = () => ({\r\n    type: ACTION_TYPES.RESET\r\n});\r\n",{"version":3,"file":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-fichier\\import-fichier.reducer.ts","sourceRoot":"","sources":["c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-fichier\\import-fichier.reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { IImportFichier, defaultValue } from 'app/shared/model/import-fichier.model';\nimport { type } from 'os';\n\nexport const ACTION_TYPES = {\n  FETCH_IMPORTFICHIER_LIST: 'importFichier/FETCH_IMPORTFICHIER_LIST',\n  FETCH_IMPORTFICHIER: 'importFichier/FETCH_IMPORTFICHIER',\n  FETCH_IMPORTFICHIER_STATUS: 'importFichier/STATUS',\n  CREATE_IMPORTFICHIER: 'importFichier/CREATE_IMPORTFICHIER',\n  UPDATE_IMPORTFICHIER: 'importFichier/UPDATE_IMPORTFICHIER',\n  DELETE_IMPORTFICHIER: 'importFichier/DELETE_IMPORTFICHIER',\n  RESET: 'importFichier/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<IImportFichier>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false,\n  status : {\n    nbClientsTotal: 0,\n    nbClientsTraites: 0,\n    nbClientsTrouves: 0,\n    nbClientsAConfirmer: 0,\n    nbClientEchec: 0,\n    nbProspects: 0\n  }\n};\n\nexport type ImportFichierState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: ImportFichierState = initialState, action): ImportFichierState => {\n  switch (action.type) {\n\n    case REQUEST(ACTION_TYPES.FETCH_IMPORTFICHIER_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_IMPORTFICHIER):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_IMPORTFICHIER):\n    case REQUEST(ACTION_TYPES.UPDATE_IMPORTFICHIER):\n    case REQUEST(ACTION_TYPES.DELETE_IMPORTFICHIER):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_IMPORTFICHIER_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_IMPORTFICHIER):\n    case FAILURE(ACTION_TYPES.CREATE_IMPORTFICHIER):\n    case FAILURE(ACTION_TYPES.UPDATE_IMPORTFICHIER):\n    case FAILURE(ACTION_TYPES.DELETE_IMPORTFICHIER):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_IMPORTFICHIER_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_IMPORTFICHIER_STATUS):\n          return {\n            ...state,\n            loading: false,\n            status: action.payload\n          };\n    case SUCCESS(ACTION_TYPES.FETCH_IMPORTFICHIER):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_IMPORTFICHIER):\n    case SUCCESS(ACTION_TYPES.UPDATE_IMPORTFICHIER):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_IMPORTFICHIER):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/import-fichiers';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<IImportFichier> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_IMPORTFICHIER_LIST,\n  payload: axios.get<IImportFichier>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<IImportFichier> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_IMPORTFICHIER,\n    payload: axios.get<IImportFichier>(requestUrl)\n  };\n};\n\nexport const getEntityStatus: ICrudGetAction<IImportFichier> = id => {\n  const requestUrl = `${apiUrl}/${id}/status`;\n  return {\n    type: ACTION_TYPES.FETCH_IMPORTFICHIER,\n    payload: axios.get<IImportFichier>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<IImportFichier> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_IMPORTFICHIER,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<IImportFichier> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_IMPORTFICHIER,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<IImportFichier> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_IMPORTFICHIER,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}