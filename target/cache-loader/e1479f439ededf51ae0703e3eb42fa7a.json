{"remainingRequest":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\upload\\upload-structure-control.tsx","dependencies":[{"path":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\upload\\upload-structure-control.tsx","mtime":1560524100273},{"path":"c:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { UPLOAD_HEADERS } from './upload-constants';\r\nexport class UploadStructureControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() { }\r\n    _getUnmatchedColumns(columns) {\r\n        const unmatchedColumns = UPLOAD_HEADERS.filter(item => columns.findIndex(item2 => item2 === item) === -1) || [];\r\n        if (this.props.isFileOk !== (unmatchedColumns.length === 0))\r\n            this.props.sayFileOk(unmatchedColumns.length === 0);\r\n        return unmatchedColumns;\r\n    }\r\n    render() {\r\n        const unmatchedColumns = this._getUnmatchedColumns(this.props.columns);\r\n        return (unmatchedColumns.length > 0 && (React.createElement(Alert, { color: \"danger\" },\r\n            React.createElement(Translate, { contentKey: \"upload.errorStructure\" }, \"Import your B to B Customers excel file\"),\r\n            React.createElement(\"ul\", null, unmatchedColumns.map((item, i) => (React.createElement(\"li\", { key: `itemerror-${i}`, className: \"justify-content-between\" }, item)))))));\r\n    }\r\n}\r\n",{"version":3,"file":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\upload\\upload-structure-control.tsx","sourceRoot":"","sources":["c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\upload\\upload-structure-control.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,KAAK,EAA4B,MAAM,YAAY,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAOpD,MAAM,OAAO,sBAAuB,SAAQ,KAAK,CAAC,SAAsC;IACtF,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAED,iBAAiB,KAAI,CAAC;IAEtB,oBAAoB,CAAC,OAAO;QAC1B,MAAM,gBAAgB,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAChH,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC;YAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;QACjH,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IACD,MAAM;QACJ,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvE,OAAO,CACL,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,CAC7B,oBAAC,KAAK,IAAC,KAAK,EAAC,QAAQ;YACnB,oBAAC,SAAS,IAAC,UAAU,EAAC,uBAAuB,8CAAoD;YACjG,gCACG,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CACjC,4BAAI,GAAG,EAAE,aAAa,CAAC,EAAE,EAAE,SAAS,EAAC,yBAAyB,IAC3D,IAAI,CACF,CACN,CAAC,CACC,CACC,CACT,CACF,CAAC;IACJ,CAAC;CACF","sourcesContent":["import React from 'react';\r\nimport { Alert, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Translate } from 'react-jhipster';\r\nimport { saveAs } from 'file-saver';\r\nimport { UPLOAD_HEADERS } from './upload-constants';\r\n\r\nexport interface IUploadStructureControlProp {\r\n  columns: any[];\r\n  sayFileOk;\r\n  isFileOk: boolean;\r\n}\r\nexport class UploadStructureControl extends React.Component<IUploadStructureControlProp> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  _getUnmatchedColumns(columns) {\r\n    const unmatchedColumns = UPLOAD_HEADERS.filter(item => columns.findIndex(item2 => item2 === item) === -1) || [];\r\n    if (this.props.isFileOk !== (unmatchedColumns.length === 0)) this.props.sayFileOk(unmatchedColumns.length === 0);\r\n    return unmatchedColumns;\r\n  }\r\n  render() {\r\n    const unmatchedColumns = this._getUnmatchedColumns(this.props.columns);\r\n    return (\r\n      unmatchedColumns.length > 0 && (\r\n        <Alert color=\"danger\">\r\n          <Translate contentKey=\"upload.errorStructure\">Import your B to B Customers excel file</Translate>\r\n          <ul>\r\n            {unmatchedColumns.map((item, i) => (\r\n              <li key={`itemerror-${i}`} className=\"justify-content-between\">\r\n                {item}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </Alert>\r\n      )\r\n    );\r\n  }\r\n}\r\n"]}]}