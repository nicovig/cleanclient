{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\ligne-prospect\\ligne-prospect-update.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\ligne-prospect\\ligne-prospect-update.tsx","mtime":1563530778244},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities as getImportLignes } from 'app/entities/import-ligne/import-ligne.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ligne-prospect.reducer';\r\nexport class LigneProspectUpdate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.saveEntity = (event, errors, values) => {\r\n            if (errors.length === 0) {\r\n                const { ligneProspectEntity } = this.props;\r\n                const entity = Object.assign({}, ligneProspectEntity, values);\r\n                if (this.state.isNew) {\r\n                    this.props.createEntity(entity);\r\n                }\r\n                else {\r\n                    this.props.updateEntity(entity);\r\n                }\r\n            }\r\n        };\r\n        this.handleClose = () => {\r\n            this.props.history.push('/entity/ligne-prospect');\r\n        };\r\n        this.state = {\r\n            importLigneId: '0',\r\n            isNew: !this.props.match.params || !this.props.match.params.id\r\n        };\r\n    }\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n            this.handleClose();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.isNew) {\r\n            this.props.reset();\r\n        }\r\n        else {\r\n            this.props.getEntity(this.props.match.params.id);\r\n        }\r\n        this.props.getImportLignes();\r\n    }\r\n    render() {\r\n        const { ligneProspectEntity, importLignes, loading, updating } = this.props;\r\n        const { isNew } = this.state;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h2\", { id: \"cleanclientApp.ligneProspect.home.createOrEditLabel\" },\r\n                        React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.home.createOrEditLabel\" }, \"Create or edit a LigneProspect\")))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : ligneProspectEntity, onSubmit: this.saveEntity },\r\n                    !isNew ? (React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"ligne-prospect-id\" },\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(AvInput, { id: \"ligne-prospect-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneSiretLabel\", for: \"ligne-prospect-sireneSiret\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneSiret\" }, \"Sirene Siret\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneSiret\", type: \"text\", name: \"sireneSiret\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneDenominationLabel\", for: \"ligne-prospect-sireneDenomination\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneDenomination\" }, \"Sirene Denomination\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneDenomination\", type: \"text\", name: \"sireneDenomination\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneHousenumberLabel\", for: \"ligne-prospect-sireneHousenumber\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneHousenumber\" }, \"Sirene Housenumber\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneHousenumber\", type: \"text\", name: \"sireneHousenumber\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneStreetLabel\", for: \"ligne-prospect-sireneStreet\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneStreet\" }, \"Sirene Street\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneStreet\", type: \"text\", name: \"sireneStreet\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneCodepostalLabel\", for: \"ligne-prospect-sireneCodepostal\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneCodepostal\" }, \"Sirene Codepostal\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneCodepostal\", type: \"text\", name: \"sireneCodepostal\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneVilleLabel\", for: \"ligne-prospect-sireneVille\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneVille\" }, \"Sirene Ville\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneVille\", type: \"text\", name: \"sireneVille\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneLatitudeLabel\", for: \"ligne-prospect-sireneLatitude\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneLatitude\" }, \"Sirene Latitude\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneLatitude\", type: \"text\", name: \"sireneLatitude\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneLongitudeLabel\", for: \"ligne-prospect-sireneLongitude\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneLongitude\" }, \"Sirene Longitude\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneLongitude\", type: \"text\", name: \"sireneLongitude\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneEtatadministratifLabel\", for: \"ligne-prospect-sireneEtatadministratif\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneEtatadministratif\" }, \"Sirene Etatadministratif\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneEtatadministratif\", type: \"text\", name: \"sireneEtatadministratif\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneNomenclatureLabel\", for: \"ligne-prospect-sireneNomenclature\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneNomenclature\" }, \"Sirene Nomenclature\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneNomenclature\", type: \"text\", name: \"sireneNomenclature\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"sireneTrancheeffectifLabel\", for: \"ligne-prospect-sireneTrancheeffectif\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.sireneTrancheeffectif\" }, \"Sirene Trancheeffectif\")),\r\n                        React.createElement(AvField, { id: \"ligne-prospect-sireneTrancheeffectif\", type: \"text\", name: \"sireneTrancheeffectif\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"ligne-prospect-importLigne\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.ligneProspect.importLigne\" }, \"Import Ligne\")),\r\n                        React.createElement(AvInput, { id: \"ligne-prospect-importLigne\", type: \"select\", className: \"form-control\", name: \"importLigne.id\" },\r\n                            React.createElement(\"option\", { value: \"\", key: \"0\" }),\r\n                            importLignes\r\n                                ? importLignes.map(otherEntity => (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)))\r\n                                : null)),\r\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/entity/ligne-prospect\", replace: true, color: \"info\" },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                            React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n    }\r\n}\r\nconst mapStateToProps = (storeState) => ({\r\n    importLignes: storeState.importLigne.entities,\r\n    ligneProspectEntity: storeState.ligneProspect.entity,\r\n    loading: storeState.ligneProspect.loading,\r\n    updating: storeState.ligneProspect.updating,\r\n    updateSuccess: storeState.ligneProspect.updateSuccess\r\n});\r\nconst mapDispatchToProps = {\r\n    getImportLignes,\r\n    getEntity,\r\n    updateEntity,\r\n    createEntity,\r\n    reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LigneProspectUpdate);\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\ligne-prospect\\ligne-prospect-update.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\ligne-prospect\\ligne-prospect-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvFeedback, AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IImportLigne } from 'app/shared/model/import-ligne.model';\r\nimport { getEntities as getImportLignes } from 'app/entities/import-ligne/import-ligne.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ligne-prospect.reducer';\r\nimport { ILigneProspect } from 'app/shared/model/ligne-prospect.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface ILigneProspectUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface ILigneProspectUpdateState {\r\n  isNew: boolean;\r\n  importLigneId: string;\r\n}\r\n\r\nexport class LigneProspectUpdate extends React.Component<ILigneProspectUpdateProps, ILigneProspectUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      importLigneId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getImportLignes();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { ligneProspectEntity } = this.props;\r\n      const entity = {\r\n        ...ligneProspectEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/ligne-prospect');\r\n  };\r\n\r\n  render() {\r\n    const { ligneProspectEntity, importLignes, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"cleanclientApp.ligneProspect.home.createOrEditLabel\">\r\n              <Translate contentKey=\"cleanclientApp.ligneProspect.home.createOrEditLabel\">Create or edit a LigneProspect</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : ligneProspectEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"ligne-prospect-id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"ligne-prospect-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"sireneSiretLabel\" for=\"ligne-prospect-sireneSiret\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneSiret\">Sirene Siret</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneSiret\" type=\"text\" name=\"sireneSiret\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneDenominationLabel\" for=\"ligne-prospect-sireneDenomination\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneDenomination\">Sirene Denomination</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneDenomination\" type=\"text\" name=\"sireneDenomination\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneHousenumberLabel\" for=\"ligne-prospect-sireneHousenumber\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneHousenumber\">Sirene Housenumber</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneHousenumber\" type=\"text\" name=\"sireneHousenumber\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneStreetLabel\" for=\"ligne-prospect-sireneStreet\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneStreet\">Sirene Street</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneStreet\" type=\"text\" name=\"sireneStreet\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneCodepostalLabel\" for=\"ligne-prospect-sireneCodepostal\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneCodepostal\">Sirene Codepostal</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneCodepostal\" type=\"text\" name=\"sireneCodepostal\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneVilleLabel\" for=\"ligne-prospect-sireneVille\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneVille\">Sirene Ville</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneVille\" type=\"text\" name=\"sireneVille\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneLatitudeLabel\" for=\"ligne-prospect-sireneLatitude\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneLatitude\">Sirene Latitude</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneLatitude\" type=\"text\" name=\"sireneLatitude\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneLongitudeLabel\" for=\"ligne-prospect-sireneLongitude\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneLongitude\">Sirene Longitude</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneLongitude\" type=\"text\" name=\"sireneLongitude\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneEtatadministratifLabel\" for=\"ligne-prospect-sireneEtatadministratif\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneEtatadministratif\">Sirene Etatadministratif</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneEtatadministratif\" type=\"text\" name=\"sireneEtatadministratif\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneNomenclatureLabel\" for=\"ligne-prospect-sireneNomenclature\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneNomenclature\">Sirene Nomenclature</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneNomenclature\" type=\"text\" name=\"sireneNomenclature\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"sireneTrancheeffectifLabel\" for=\"ligne-prospect-sireneTrancheeffectif\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.sireneTrancheeffectif\">Sirene Trancheeffectif</Translate>\r\n                  </Label>\r\n                  <AvField id=\"ligne-prospect-sireneTrancheeffectif\" type=\"text\" name=\"sireneTrancheeffectif\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"ligne-prospect-importLigne\">\r\n                    <Translate contentKey=\"cleanclientApp.ligneProspect.importLigne\">Import Ligne</Translate>\r\n                  </Label>\r\n                  <AvInput id=\"ligne-prospect-importLigne\" type=\"select\" className=\"form-control\" name=\"importLigne.id\">\r\n                    <option value=\"\" key=\"0\" />\r\n                    {importLignes\r\n                      ? importLignes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/ligne-prospect\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  importLignes: storeState.importLigne.entities,\r\n  ligneProspectEntity: storeState.ligneProspect.entity,\r\n  loading: storeState.ligneProspect.loading,\r\n  updating: storeState.ligneProspect.updating,\r\n  updateSuccess: storeState.ligneProspect.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getImportLignes,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LigneProspectUpdate);\r\n"]}]}