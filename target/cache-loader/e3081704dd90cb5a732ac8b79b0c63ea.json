{"remainingRequest":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\myAccount\\myAccount-fullresult-map.tsx","dependencies":[{"path":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\myAccount\\myAccount-fullresult-map.tsx","mtime":1564475734663},{"path":"C:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport MyAccountFullResultMapInfo from './myAccount-fullresult-map-info';\r\nimport './myAccount.scss';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\nexport class MyAccountFullResultMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {};\r\n        this.getMarkersLegend = () => {\r\n            const { fullResult } = this.props;\r\n            var markersClients, markersProspects, layerClients, layerProspects, legend;\r\n            //CLIENTS\r\n            if (fullResult && fullResult.length > 0) {\r\n                markersClients = fullResult\r\n                    .filter(item1 => item1.sireneLatitude && item1.sireneLongitude)\r\n                    .map((item, i) => {\r\n                    return L.marker([item.sireneLatitude, item.sireneLongitude], { icon: blueIcon }).on({\r\n                        mouseover: () => this._handleMouseOver(item),\r\n                        mouseout: () => this._handleMouseOut()\r\n                    });\r\n                });\r\n                layerClients = L.layerGroup(markersClients).addTo(this.map);\r\n            }\r\n            //PROSPECTS\r\n            const prospects = fullResult.flatMap(function callback(ligneResult) {\r\n                return ligneResult.ligneProspects;\r\n            });\r\n            if (prospects && prospects.length > 0) {\r\n                markersProspects = prospects\r\n                    .filter(item1 => item1.sireneLatitude && item1.sireneLongitude)\r\n                    .map((item) => {\r\n                    return L.marker([item.sireneLatitude, item.sireneLongitude], { icon: yellowIcon }).on({\r\n                        mouseover: () => this._handleMouseOver(item),\r\n                        mouseout: () => this._handleMouseOut()\r\n                    });\r\n                });\r\n                layerProspects = L.layerGroup(markersProspects).addTo(this.map);\r\n            }\r\n            var overlayMaps = {\r\n                \"Clients<img class='markersLegend' src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png'>\": layerClients,\r\n                \"Prospects<img class='markersLegend' src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-yellow.png'>\": layerProspects\r\n            };\r\n            legend = L.control.layers(null, overlayMaps, { position: 'topleft', collapsed: false, check: true });\r\n            legend.addTo(this.map);\r\n        };\r\n        this.state = {\r\n            etablissementHover: {},\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.map = L.map('mapSite', { zoomControl: false, maxZoom: 15, minZoom: 6 }).setView([46.973622, 1.80852], 6);\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(this.map);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.fullResult || prevProps.fullResult.length !== this.props.fullResult.length) {\r\n            this.getMarkersLegend();\r\n        }\r\n    }\r\n    _handleMouseOver(item) {\r\n        this.setState({ etablissementHover: item });\r\n    }\r\n    ;\r\n    _handleMouseOut() {\r\n        this.setState({ etablissementHover: {} });\r\n    }\r\n    ;\r\n    render() {\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"div\", { id: \"mapInfo\", className: \"infoMap\" },\r\n                React.createElement(MyAccountFullResultMapInfo, { infoEts: this.state.etablissementHover, mapped: this.props.mapped })),\r\n            React.createElement(\"div\", { id: \"mapSite\", className: \"map\" })));\r\n    }\r\n}\r\nconst blueIcon = new L.Icon({\r\n    iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41]\r\n});\r\nconst yellowIcon = new L.Icon({\r\n    iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png',\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41]\r\n});\r\n",{"version":3,"file":"C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\myAccount\\myAccount-fullresult-map.tsx","sourceRoot":"","sources":["C:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!C:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\modules\\myAccount\\myAccount-fullresult-map.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,CAAC,MAAM,SAAS,CAAC;AACxB,OAAO,0BAA0B,CAAC;AAClC,OAAO,0BAA0B,MAAM,iCAAiC,CAAC;AAEzE,OAAO,kBAAkB,CAAC;AAE1B,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC;AAC5C,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;IAC1B,aAAa,EAAE,OAAO,CAAC,wCAAwC,CAAC;IAChE,OAAO,EAAE,OAAO,CAAC,qCAAqC,CAAC;IACvD,SAAS,EAAE,OAAO,CAAC,uCAAuC,CAAC;CAC5D,CAAC,CAAC;AAUH,MAAM,OAAO,sBAAuB,SAAQ,KAAK,CAAC,SAAoE;IAGpH,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QAHf,QAAG,GAAG,EAAE,CAAC;QA+BT,qBAAgB,GAAG,GAAG,EAAE;YACtB,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,cAAc,EACd,gBAAgB,EAChB,YAAY,EACZ,cAAc,EACd,MAAM,CAAC;YAEX,SAAS;YACT,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvC,cAAc,GAAG,UAAU;qBACV,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,eAAe,CAAC;qBAC9D,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;oBACC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC;wBAClF,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;wBAC5C,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE;qBACvC,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;gBACL,YAAY,GAAG,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC7D;YAED,WAAW;YACX,MAAM,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,QAAQ,CAAC,WAAW;gBAChE,OAAO,WAAW,CAAC,cAAc,CAAA;YACjC,CAAC,CAAC,CAAA;YACJ,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrC,gBAAgB,GAAG,SAAS;qBACX,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,eAAe,CAAC;qBAC9D,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;oBACI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC;wBACpF,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;wBAC5C,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE;qBACvC,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;gBACL,cAAc,GAAG,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACjE;YAED,IAAI,WAAW,GAAG;gBAChB,6IAA6I,EAAE,YAAY;gBAC3J,iJAAiJ,EAAE,cAAc;aAClK,CAAC;YAEF,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,EAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAE,CAAC;YACrG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAA;QAxEC,IAAI,CAAC,KAAK,GAAG;YACX,kBAAkB,EAAE,EAAkB;SACvC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9G,CAAC,CAAC,SAAS,CAAC,oDAAoD,EAAE;YAChE,WAAW,EAAE,yFAAyF;SACvG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAErB,CAAC;IAED,kBAAkB,CAAC,SAAS;QAC1B,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE;YACzF,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;IACH,CAAC;IAED,gBAAgB,CAAC,IAAI;QACnB,IAAI,CAAC,QAAQ,CAAC,EAAE,kBAAkB,EAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,CAAC;IAAA,CAAC;IACF,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,EAAE,kBAAkB,EAAE,EAAE,EAAE,CAAC,CAAC;IAC5C,CAAC;IAAA,CAAC;IAkDF,MAAM;QACJ,OAAO,CACL;YACE,6BAAK,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS;gBACnC,oBAAC,0BAA0B,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAC5F;YACN,6BAAK,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,KAAK,GAAO,CACpC,CACP,CAAC;IACJ,CAAC;CACF;AACD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;IAC1B,OAAO,EAAE,sFAAsF;IAC/F,SAAS,EAAE,+EAA+E;IAC1F,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAClB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IACpB,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACrB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;CACrB,CAAC,CAAC;AAEH,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC;IAC5B,OAAO,EAAE,wFAAwF;IACjG,SAAS,EAAE,+EAA+E;IAC1F,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAClB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IACpB,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACrB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;CACrB,CAAC,CAAC","sourcesContent":["import React from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport MyAccountFullResultMapInfo from './myAccount-fullresult-map-info';\r\nimport { IImportLigne } from 'app/shared/model/import-ligne.model';\r\nimport './myAccount.scss';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\nexport interface IMyAccountFullResultMapProp {\r\n  fullResult: IImportLigne[];\r\n  mapped: boolean;\r\n}\r\n\r\nexport interface IMyAccountFullResultMapState {\r\n  etablissementHover: IImportLigne;\r\n}\r\n\r\nexport class MyAccountFullResultMap extends React.Component<IMyAccountFullResultMapProp, IMyAccountFullResultMapState> {\r\n  map = {};\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      etablissementHover: {} as IImportLigne,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map = L.map('mapSite', { zoomControl: false, maxZoom: 15, minZoom: 6 }).setView([46.973622, 1.80852], 6);\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(this.map);\r\n    \r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.fullResult || prevProps.fullResult.length !== this.props.fullResult.length) {\r\n      this.getMarkersLegend();\r\n    }\r\n  }\r\n\r\n  _handleMouseOver(item)  {\r\n    this.setState({ etablissementHover:item });\r\n  };\r\n  _handleMouseOut()  {\r\n    this.setState({ etablissementHover: {} });\r\n  };\r\n\r\n\r\n  getMarkersLegend = () => {\r\n    const { fullResult } = this.props;\r\n\r\n    var markersClients, \r\n        markersProspects,\r\n        layerClients, \r\n        layerProspects,\r\n        legend;\r\n\r\n    //CLIENTS\r\n    if (fullResult && fullResult.length > 0) {\r\n      markersClients = fullResult\r\n                      .filter(item1 => item1.sireneLatitude && item1.sireneLongitude)\r\n                      .map((item, i) => {\r\n                                        return L.marker([item.sireneLatitude, item.sireneLongitude], { icon: blueIcon }).on({\r\n                                          mouseover: () => this._handleMouseOver(item),\r\n                                          mouseout: () => this._handleMouseOut()\r\n                                        });\r\n        });\r\n      layerClients = L.layerGroup(markersClients).addTo(this.map);\r\n    }\r\n  \r\n    //PROSPECTS\r\n    const prospects = fullResult.flatMap(function callback(ligneResult){\r\n      return ligneResult.ligneProspects\r\n      })\r\n    if (prospects && prospects.length > 0) {\r\n      markersProspects = prospects\r\n                      .filter(item1 => item1.sireneLatitude && item1.sireneLongitude)\r\n                      .map((item) => {\r\n                                        return L.marker([item.sireneLatitude, item.sireneLongitude], { icon: yellowIcon }).on({\r\n                                          mouseover: () => this._handleMouseOver(item),\r\n                                          mouseout: () => this._handleMouseOut()\r\n                                        });\r\n        });\r\n      layerProspects = L.layerGroup(markersProspects).addTo(this.map);\r\n    }\r\n\r\n    var overlayMaps = {\r\n      \"Clients<img class='markersLegend' src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png'>\": layerClients ,\r\n      \"Prospects<img class='markersLegend' src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-yellow.png'>\": layerProspects\r\n    };\r\n\r\n    legend = L.control.layers(null, overlayMaps, {position: 'topleft', collapsed: false, check: true } );\r\n    legend.addTo(this.map);                                                           \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"mapInfo\" className=\"infoMap\" >\r\n          <MyAccountFullResultMapInfo infoEts={this.state.etablissementHover} mapped={this.props.mapped}/>\r\n        </div>\r\n        <div id=\"mapSite\" className=\"map\"></div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst blueIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nconst yellowIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});"]}]}