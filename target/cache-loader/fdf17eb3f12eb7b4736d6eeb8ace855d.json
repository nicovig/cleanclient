{"remainingRequest":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js??ref--4-3!c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-ligne\\import-ligne-detail.tsx","dependencies":[{"path":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-ligne\\import-ligne-detail.tsx","mtime":1560262739634},{"path":"c:\\jhipster\\cleanclient\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './import-ligne.reducer';\r\nexport class ImportLigneDetail extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    }\r\n    render() {\r\n        const { importLigneEntity } = this.props;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.detail.title\" }, \"ImportLigne\"),\r\n                    \" [\",\r\n                    React.createElement(\"b\", null, importLigneEntity.id),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"nom\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.nom\" }, \"Nom\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.nom),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"adresse\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.adresse\" }, \"Adresse\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.adresse),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"cp\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.cp\" }, \"Cp\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.cp),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"ville\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.ville\" }, \"Ville\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.ville),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"siret\" },\r\n                            React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.siret\" }, \"Siret\"))),\r\n                    React.createElement(\"dd\", null, importLigneEntity.siret),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"cleanclientApp.importLigne.importFichier\" }, \"Import Fichier\")),\r\n                    React.createElement(\"dd\", null, importLigneEntity.importFichier ? importLigneEntity.importFichier.id : '')),\r\n                React.createElement(Button, { tag: Link, to: \"/entity/import-ligne\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: `/entity/import-ligne/${importLigneEntity.id}/edit`, replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\r\n    }\r\n}\r\nconst mapStateToProps = ({ importLigne }) => ({\r\n    importLigneEntity: importLigne.entity\r\n});\r\nconst mapDispatchToProps = { getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportLigneDetail);\r\n",{"version":3,"file":"c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-ligne\\import-ligne-detail.tsx","sourceRoot":"","sources":["c:\\jhipster\\cleanclient\\node_modules\\tslint-loader\\index.js!c:\\jhipster\\cleanclient\\src\\main\\webapp\\app\\entities\\import-ligne\\import-ligne-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './import-ligne.reducer';\nimport { IImportLigne } from 'app/shared/model/import-ligne.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IImportLigneDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class ImportLigneDetail extends React.Component<IImportLigneDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { importLigneEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"cleanclientApp.importLigne.detail.title\">ImportLigne</Translate> [<b>{importLigneEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"nom\">\n                <Translate contentKey=\"cleanclientApp.importLigne.nom\">Nom</Translate>\n              </span>\n            </dt>\n            <dd>{importLigneEntity.nom}</dd>\n            <dt>\n              <span id=\"adresse\">\n                <Translate contentKey=\"cleanclientApp.importLigne.adresse\">Adresse</Translate>\n              </span>\n            </dt>\n            <dd>{importLigneEntity.adresse}</dd>\n            <dt>\n              <span id=\"cp\">\n                <Translate contentKey=\"cleanclientApp.importLigne.cp\">Cp</Translate>\n              </span>\n            </dt>\n            <dd>{importLigneEntity.cp}</dd>\n            <dt>\n              <span id=\"ville\">\n                <Translate contentKey=\"cleanclientApp.importLigne.ville\">Ville</Translate>\n              </span>\n            </dt>\n            <dd>{importLigneEntity.ville}</dd>\n            <dt>\n              <span id=\"siret\">\n                <Translate contentKey=\"cleanclientApp.importLigne.siret\">Siret</Translate>\n              </span>\n            </dt>\n            <dd>{importLigneEntity.siret}</dd>\n            <dt>\n              <Translate contentKey=\"cleanclientApp.importLigne.importFichier\">Import Fichier</Translate>\n            </dt>\n            <dd>{importLigneEntity.importFichier ? importLigneEntity.importFichier.id : ''}</dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/import-ligne\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/entity/import-ligne/${importLigneEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ importLigne }: IRootState) => ({\n  importLigneEntity: importLigne.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportLigneDetail);\n"]}]}